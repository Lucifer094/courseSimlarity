汇编语言程序设计课程是计算机专业高等教育的专业基础必修课程。汇编语言程序设计实验是汇编语言程序设计课程的不可缺少的重要组成部分。本课程作为一门面向机器硬件的软件设计技术，对了解机器指令和加深对计算机系统工作原理的理解有很大的帮助，是硬件类课程和操作系统类课程的先行课程。通过本实验课程的学习，巩固知识锻炼能力，使学生掌握汇编语言程序设计的基本方法和技术；加深对计算机系统的认识和理解；以有利于今后计算机相关专业课程的学习；帮助学生今后从事有关计算机应用及研究工作。二、课程具体内容及基本要求实验一基本汇编环境熟悉和Debug命令实验(4学时)基本内容包括：（1）汇编基本上机环境熟悉（2）Debug主要命令和DOS命令1.基本要求熟悉Debug环境下的各种命令，包括内存查看修改命令；寄存器查看修改命令；移动命令等，进一步理解内存数据存放、寄存器、物理地址与逻辑地址关系等概念2.重点、难点重点：熟悉Debug环境下内存和寄存器查看/修改等命令；难点：无3.作业及课外学习要求：熟练掌握汇编程序设计Debug环境下对内存和寄存器的相关命令。通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验二编写第一个程序实验(4学时)基本内容包括：(1)通过第二章两个简单实例认识汇编语言程序，初步了解程序格式；段定义；标号；DOS系统功能；操作数；指令；说明语句等作用。(2)掌握汇编语言程序从设计到形成可执行程序文件的方法和步骤。即编辑、汇编、连接。了解汇编语言的系统工作文件和工作环境。理解汇编程序和连接程序的作用。理解列表文件内容。1.基本要求（1）熟悉和掌握汇编程序的编辑、汇编、连接、运行等一系列过程；（2）掌握使用Debug命令对程序进行调试运行的方法2.重点、难点重点：熟练掌握汇编语言程序从设计到形成可执行程序文件的方法和步骤。难点：使用Debug命令对程序进行调试。3.作业及课外学习要求：掌握汇编语言程序设计的编写执行和一般调试方法。通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验三算术及位串处理程序(4学时)基本内容包括：（1）算术运算指令；（2）移位操作指令；（3）逻辑运算指令；（4）串操作指令；1.基本要求掌握多数位的算术运算、移位操作、逻辑指令和字符串操作等程序的设计，学习使用分支与循环等基本编程方法，熟练使用DEBUG。2.重点、难点重点：加减法算术运算指令；移位操作指令；逻辑运算指令；串操作指令；难点：乘除法算术运算指令；3.作业及课外学习要求：掌握基本的算术运算和串操作指令。通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验四寻址方式相关实验(4学时)基本内容包括：7种不同的寻址方式的相关实验1.基本要求通过实验加深对7种不同的寻址方式的理解和掌握2.重点、难点掌握常见的寻址方法3.作业及课外学习要求：掌握对基本的寻址方式和数据存储位置的理解。通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验五转移指令相关实验(4学时)基本内容包括：转移指令的相关实验1.基本要求通过对转移指令的学习，结合标志寄存器，加深对指令的跳转流向的理解。2.重点、难点重点：根据标志寄存器进行转移的相关指令难点：段间转移、子程序调用转移和中断调用转移3.作业及课外学习要求：掌握常见的转移指令；通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验六分支程序设计(4学时)基本内容包括：(8)单分支程序(9)复合分支程序(10)多分支程序1.基本要求掌握分支程序等基本编程方法。熟悉数制转换。用条件转移指令和跳跃表法实现程序转移。2.重点、难点重点：（1）通过实践熟悉分支程序结构，利用流程图可以实现相应的汇编程序；（2）熟练掌握单分支和复合分支程序难点：复合分支程序以及跳跃表设计的多分支结构的设计。3.作业及课外学习要求：掌握分支结构程序的编写方法；通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验七循环程序设计(4学时)基本内容包括：（1）循环程序结构；（2）计数循环程序；（3）条件循环程序；（4）多重循环程序；1.基本要求掌握和提高循环程序编程技巧，熟悉键盘输入、显示输出等基本人机交互。2.重点、难点重点：熟练掌握计数循环程序和条件循环程序的设计。难点：多重循环程序。3.作业及课外学习要求：掌握循环结构程序的编写方法；通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验八子程序设计(4学时)基本内容包括：(9)用传递参数地址的方法设计通用子程序(10)用堆栈传递参数或参数地址(11)使用结构变量传递多个参数(12)程序的嵌套和递归子程序1.基本要求掌握通用子程序的设计方法，合理划分子程序功能和正确进行子程序的参数传递。2.重点、难点（1）学会模块化的程序设计方法，合理分解任务和划分功能，设计多个子程序；（2）子程序的参数传递，入口参数和出口参数。重点：（1）掌握程序模块划分方法，设计多个子程序；（2）掌握子程序的参数传递方法；难点：（1）堆栈参数传递。（2）结构变量传递多个参数。3.作业及课外学习要求：掌握参数传递的方法；通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。实验九宏汇编程序设计(4学时)基本内容包括：（1）宏定义、宏调用；（2）宏定义和宏调用中的参数；（3）宏指令的嵌套；1.基本要求正确设计宏定义，合理设置宏定义的参数，正确使用宏调用。利用建立的宏库文件进行编程，充分共享软件资源。通过和子程序技术的比较，加深对宏汇编技术的理解，提高编程技巧。2.重点、难点理解和掌握宏定义和宏展开的方法。正确使用宏指令的嵌套。3.作业及课外学习要求：掌握宏定义和宏展开的方法通过当堂对实验课题的完成情况检查和实验期末上机测试的两方面对学生专业核心知识掌握进行考核，即对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估。