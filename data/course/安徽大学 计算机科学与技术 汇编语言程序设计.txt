《汇编语言程序设计》课程是计算机专业高等教育的专业基础必修课程。讲授对象为计算机及相关专业一年级和二年级的学生。通过该课程的学习，使学生掌握汇编语言程序设计的基本方法和技术，从而加深对计算机系统的认识和理解；以有利于今后计算机相关专业课程的学习。同时本课程作为一门面向机器硬件的软件设计技术，可以在计算机应用开发中得到应用，能够帮助学生今后从事有关计算机应用及研究工作。二、课程具体内容及基本要求第一章汇编语言基础知识(4学时)基本内容包括：(1)汇编语言简介(2)计算机中数据的表示(3)计算机系统组成(4)中央处理器CPU(5)存储器(6)外部设备和接口1.基本要求(1)认识汇编语言的意义；(2)熟悉计算机中数据和字符的常用表示方法、补码的运算；(3)CPU中的寄存器以及主存储器的分段。2.重点、难点重点：(1)计算机中数据的表示，补码定义和表示，补码运算；(2)中央处理器CPU中的数据寄存器、地址寄存器、段寄存器和专用寄存器。难点：(1)二进制数、十六进制数转换和十进制数的互相转换；(2)不同类型数据在内存中的存放。3.作业及课外学习要求：掌握进制之间的相互转换。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第二章汇编语言程序实例及工作环境(2学时)基本内容包括：(1)汇编语言程序实例(2)工作环境及上机操作(3)DEBUG主要命令(4)常用的DOS命令(5)几个常用的DOS系统功能调用1.基本要求(1)初步认识汇编语言程序；(2)熟悉和掌握建立程序和上机操作的过程。2.重点、难点重点：(1)了解并掌握汇编语言程序从设计到形成可执行程序文件的方法和步骤。即编辑、汇编、连接。用文本编辑程序写程序，形成.ASM文件,用汇编程序对.ASM文件进行汇编，形成.OBJ文件，再用连接程序对.OBJ文件进行连接，形成.EXE文件。(2)了解汇编语言的系统工作文件和工作环境。理解汇编程序和连接程序的作用。难点：逐步熟悉并熟练掌握程序的运行和调试方法。正确使用DEBUG主要命令和常用的DOS命令。3.作业及课外学习要求：掌握汇编语言程序设计的环境和调试方法。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第三章寻址方式(4学时)基本内容包括：(1)立即寻址方式(immediateaddressing)(2)寄存器寻址方式(registeraddressing)(3)直接寻址方式(directaddressing)(4)寄存器间接寻址方式(RegisterindirectAddressing)(5)寄存器相对寻址方式(registerrelativeaddressing)(6)基址变址寻址方式(basedindexedaddressing)(7)相对基址变址寻址方式(relativebasedindexedaddressing)1.基本要求掌握七种寻址方式2.重点、难点掌握常用的寻址方式3.作业及课外学习要求：掌握常用的寻址方式。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第四章指令系统(8学时)基本内容包括：(1)数据传送指令(2)类型扩展指令(3)算术运算指令(4)逻辑指令(5)移位指令(6)串操作指令(7)程序转移指令(8)处理机控制指令(9)80386后继机型的新增扩展指令和寻址方式1.基本要求(1)掌握汇编语言常用指令的格式和功能(2)并能应用这些指令编制程序的片段。2.重点、难点重点：(1)熟练掌握通用数据传送指令，能正确使用堆栈操作和累加器专用传送指令，了解地址传送指令和标志寄存器传送指令。(2)正确使用算术运算指令，区分无符号数和有符号数的运算，正确理解和判断无符号数和有符号数的溢出。难点：(1)掌握逻辑指令、移位指令。正确使用串操作指令设计串处理程序。(2)理解转移指令，正确使用条件转移指令对无符号数和有符号数的判断；条件转移指令和循环指令实现循环。3.作业及课外学习要求：掌握常用指令的格式和适用场合。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第五章伪指令与源程序格式(2学时)基本内容包括：(1)伪指令(2)语句格式1.基本要求(1)学会使用简便而有效率的指令格式；(2)正确定义数据变量；(3)熟知源程序的格式；(4)编写完整的汇编语言程序。2.重点、难点重点：(1)段定义伪指令；(2)数据定义与存储器单元分配伪指令；(3)理解和掌握LABEL伪指令和变量类型属性操作符的使用；(4)掌握汇编地址计数器$的使用。难点：(1)理解变量地址减法的物理意义；(2)理解表达式和运算符，并能正确使用。3.作业及课外学习要求：掌握相关伪指令的格式。编写完整的汇编语言程序。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第六章分支与循环程序设计(6学时)基本内容包括：(1)单分支程序(2)复合分支程序(3)多分支程序(4)循环程序结构(5)计数循环程序(6)条件循环程序(7)多重循环程序1.基本要求学会编写完整的汇编语言程序。2.重点、难点重点：(1)熟悉分支程序结构，正确利用流程图设计复合分支结构的程序；(2)熟练掌握计数循环程序和条件循环程序的设计。难点：(1)掌握跳跃表法设计多分支结构的程序；(2)多重循环程序。3.作业及课外学习要求：掌握分支结构程序的编写方法；掌握循环结构程序的编写方法。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第七章子程序设计(6学时)基本内容包括：(1)用寄存器传递参数(2)用变量传递参数(3)用传递参数地址的方法设计通用子程序(4)用堆栈传递参数或参数地址(5)使用结构变量传递多个参数(6)多模块程序设计(7)汇编语言与高级语言的联合编程(8)程序的嵌套和递归子程序1.基本要求学会这种模块化的程序设计方法，使得程序结构清晰，提高程序的可阅读性和可维护性。2.重点、难点重点：(1)学会模块化的程序设计方法，合理分解任务和划分功能，设计多个子程序；(2)子程序的参数传递，入口参数和出口参数。难点：(1)用传递参数地址的方法设计通用子程序；(2)用堆栈传递参数或参数地址；(3)结构类型的定义和结构变量的预置及访问。使用结构变量传递多个参数。3.作业及课外学习要求：掌握子程序之间参数的传递方法。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。第八章宏汇编及其它高级伪操作(2学时)基本内容包括：(1)宏定义、宏调用和宏展开(2)宏定义和宏调用中的参数(3)宏指令的嵌套1.基本要求掌握宏定义和宏展开的方法。2.重点、难点理解和掌握宏定义、宏调用和宏展开，正确使用宏指令的嵌套。3.作业及课外学习要求：掌握宏定义和宏展开的方法。通过期末笔试的考试来对学生专业核心知识掌握进行考核，即对“毕业要求1工程知识”中的“指标点1-3：掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题”的指标达成度进行评估。让学生在学习本课程过程中，掌握正确的学习方法，不断学习，在基础知识上具有扩展学习的能力。