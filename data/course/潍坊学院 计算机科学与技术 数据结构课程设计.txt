《数据结构》是一门实践性较强的软件基础课程。本课程设计的目的就是要达到理论与实际应用相结合，使学生能够根据数据对象的特性，学会数据组织的方法，能把现实世界中的实际问题在计算机内部表示出来，设计有效算法，并培养基本的、良好的程序设计技能。通过该课程设计，使学生了解并掌握数据结构与算法的设计方法，提高学生分析问题、解决问题的能力，提高学生动手实践、理论联系实际以及协同创新的能力，培养学生软件工作者所应具备的科学的工作方法和作风。二、教学基本要求通过这次设计，要求学生了解并掌握数据结构与算法的设计方法，具备初步的独立分析和设计能力；初步掌握软件开发过程的问题分析、系统设计、程序编码、测试等基本方法和技能；提高综合运用所学理论知识和方法独立分析和解决问题的能力；训练用系统的观点按软件开发的一般规范进行软件开发，培养软件工作者所应具备的科学的工作方法和作风。该课程设计的基本要求：题目应选择与实际应用结合紧密的较综合性的题目，大小难度适中，能综合运用所学理论知识和方法；对系统的分析正确，思路清晰，设计方案合理；系统运行正确，简练实用，操作方便；要注意设计、编码、调试及测试过程的经验积累和技巧，提高学生的动手能力和解决实际问题的能力；按课程设计任务书的要求，每个学生独立完成自己的设计任务并编写设计说明187书，课程设计说明书要规范、认真、清晰完整。三、教学内容及学时分配1、课程设计的步骤（1）问题分析：根据设计题目的要求，充分地分析和理解问题，明确问题要求做什么？限制条件是什么？（2）概要设计：根据题目的特点，对问题描述中涉及的操作对象选择合适的数据结构，定义相应的抽象数据类型，并给出解决问题的总体流程。在这个过程中，要综合考虑系统的功能，使得系统结构清晰、合理、简单，而不必过早考虑语言的实现细节。（3）详细设计：对数据结构和基本操作做出进一步的求精，写出数据存储结构并写出各函数的伪码算法。（4）程序编码：把详细设计的结果进一步求精为程序设计语言程序。同时加入一些注解和断言，使程序中逻辑概念清楚。（5）程序调试与测试：调试采用自底向上方式，分模块进行，即先调试低层函数。能够熟练掌握调试工具的各种功能，设计测试数据。调试正确后，认真整理源程序及其注释，形成格式和风格良好的源程序清单和结果。（6）结果分析：程序运行结果包括正确的输入及其输出结果和含有错误的输入及其输出结果。算法的时间、空间复杂性分析。（7）按要求写出课程设计说明书。2、参考工作进度表第1天：分析问题，查阅资料，方案讨论；第2—3天：数据结构设计、算法概要设计；第4—7天：算法详细设计、编码实现；第8天：系统测试结果、改进或拓展；第9－10天：配合教师验收；撰写课程设计报告。3、课程设计的指导方式（1）系统调查阶段，教师给出设计题目和要求，向学生介绍所开发系统的实际背景情况，学生查阅有关文献资料，完成资料、文档的收集和建立。（2）分析阶段，指导教师应检查学生建立的逻辑模型是否合理、完善；（3）系统设计阶段，学生自主进行方案设计，确定数据结构，指导教师应解释学生提出的问题，帮助学生检查设计的合理性与正确性，引导学生正确使用工具；（4）系统实现及测试阶段，指导教师应指导学生实现系统编码及测试、调试过188程，遇到问题及时解决；（5）说明书书写时，指导教师应明确说明书的格式与要求，并检查学生的设计说明书是否规范、充实、认真。四、成绩考核方法1、成绩考核分为优秀、良好、中等、及格与不及格五等2、成绩考核的确定需涉及下述方面：（1）方案的合理性；（2）程序的正确性；（3）功能的完善性；（4）报告书的规范性（5）设计过程的主要表现及出勤情况；（6）工作量的大小。