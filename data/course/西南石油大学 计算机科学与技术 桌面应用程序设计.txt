本课程是软件技术专业的一门任选课。本课程在指导学生基于C#语言,掌握桌面应用程序开发的一些基本理论基础知识后，结合面向对象的编程思想，以实际的小型编程例子为主导，精心设计教学案例，使学生不但了解C#语言特性，并能利用C#语言实际完成对应的桌面应用程序开发项目，在动手编程的实践中，活学活用，解决实际的软件开发问题，培养学生的编程能力，以及面向对象的编程思想。为软件技术专业学生从事软件开发打下坚实的基础。本课程的目的是培养学生利用所学C#语法知识，解决实际的问题。利用小型的实际项目，以案例的方式，培养学生实际的桌面应用程序开发能力。三、基本要求1.课程支撑能力熟悉桌面应用程序的开发方法，能够完整地开发一个特定的桌面应用程序。2.课程教学目标1)掌握类的概念，类的成员，构造函数与析构函数的设计，访问器的设计。2)掌握类的继承的概念，成员访问修饰符的作用，抽象函数以及静态类的设计和作用。3)掌握C#中语句，表达式，运算符等的相关知识。4)掌握命名空间以及程序集的概念，以及各自的作用。5)掌握异常的概念和作用。6)掌握数组，枚举，以及结构体在C#语言中的定义方法。7)了解委托，事件，以及接口的概念。8)了解泛型，装换，以及枚举器和迭代器的概念和作用3.达成途径1)课堂以多媒体课件，案例讲解，现场编程教学，板书等多种方式相结合，辅之以一定的课堂讨论。2)以软件应用开发能力培养为主，语法为辅。4663)综合突出案例式教学，以案例的方式贯穿语法，以案例的方式，传授项目开发经验。4)采用机试的最终考核方式，以考察学生应用所学知识解决实际问题，考核学生实际项目开发能力。四、教学内容、要求及学时分配（一）理论教学(24学时)1.第一章C#概述（2学时）【目的与要求】：了解C#和.Net框架，VS2010等IDE开发环境，以及C#编程的基本概述。【重点】：.Net框架。【难点】：如何充分理解.Net框架的优缺点。【教学建议】：以课件讲解为主，辅之以适当提问。第一节C#和.Net框架（1学时）1.1C#语言的历史1.2.Net框架的组成1.3C#语言的编译过程1.4CLR与CLI的概念【重点：C#语言的编译过程，CLR与CLI的概念】【难点：.Net框架】第二节C#编程概述（1学时）、2.1简单C#程序的构成2.2标示符和关键字的相关约定2.3Main函数的编写方法2.4Console.Write（）函数完成文本输出2.5注释的3种不同方法【重点：简单C#程序的构成与C、C++语言之间的区别】【难点：在完成一个基本C#程序的时候涉及到的命名空间的概念】2.第二章C#类（10学时）【目的与要求】：了解类在C#中的声明和定义方法，类的实例化，数据成员和函数成员的定义，堆和栈，以及值类型和引用类型的区别。【重点】：类的定义，继承，抽象的概念。【难点】：如何充分理解类的继承以及形成面向对象的思想。【教学建议】：以案例讲解为主，辅之以学生演示或提问。第一节类型、存储和变量（1学时）4671.1类型的概念，类的定义方法1.2类型的实例化1.3数据成员和函数成员1.4预定义类型和用户自定义类型1.5栈和堆的定义1.6值类型和应用类型1.7变量的定义【重点：类的概念，类的实例化的概念，成员，栈和堆，变量】【难点：值类型和引用类型各自的特性和区别】第二节类（1学时）2.1类的概述2.2类的声明和定义2.3类的成员2.4字段，以及显示和隐式的字段初始化2.5方法2.6创建类的实例2.7数据分配内存策略2.8访问修饰符的概念与定义2.9从类的内部访问成员2.10从类的外部访问成员【重点：类的、字段与方法的定义方法，类实例的创建过程】【难点：访问修饰符的作用】第三节方法（2学时）3.1方法的结构3.2本地变量和本地常量3.3方法调用3.4方法的返回值3.5方法的形参与实参3.6值参数3.7引用参数3.8输出参数3.9方法重载【重点：方法的结构，方法的调用方法】【难点：三种不同参数之间的异同以及方法的重载】第四节类的进阶（3学时）4.1静态字段的定义4.2静态字段的访问方式以及生存周期4684.3静态成员函数的访问方式4.4属性的概念4.5属性与访问器4.6属性的使用4.7实例构造函数4.8静态构造函数4.9析构函数4.10this关键字的使用【重点：静态字段以及静态方法，属性的使用，构造函数与析构函数】【难点：静态构造函数，this关键字的使用】第五节类和继承（3学时）5.1类的继承的概念和定义方法5.2虚方法和覆写方法5.3继承层次中的构造函数的执行5.4成员访问修饰符5.5抽象成员5.6抽象类5.7密封类5.8静态类【重点：继承，访问修饰符的使用方法，构造函数在继承层次中的执行方式】【难点：抽象类，密封类，以及静态类的定义和使用】3.第三章表达式和语句（4学时）【目的与要求】：掌握各种不同类型的运算符在C#中的使用方法与作用。【重点】：表达式的正确写法以及各种结构的灵活使用。【难点】：语句的灵活使用。【教学建议】：以案例讲解为主，辅之以学生演示或提问。第一节表达式（2学时）1.1表达式的定义1.2整数字面量/字符字面量/字符串字面量1.3运算符1.4运算符的重载1.5typeof运算符【重点：各种不同运算符的灵活使用】【难点：typeof运算符】第二节C#编程概述（2学时）2.1表达式语句4692.2控制流语句2.3选择语句2.4循环语句2.5跳转语句2.6using语句【重点：控制流语句】【难点：using语句】4.第四章命名空间、异常和枚举（4学时）【目的与要求】：掌握命名空间的定义和使用，掌握异常类，以及try、catch、finally语句的使用，掌握结构、枚举、数组在C#中的定义和使用。【重点】：using语句的使用，枚举的灵活使用。【难点】：异常类的灵活应用。【教学建议】：以案例讲解为主，辅之以学生演示或提问。第一节命名空间（1学时）1.1命名空间的概念1.2命名空间的使用方法1.3using指令的定义1.4using指令的使用【重点：命名空间的概念，与using指令的定义】【难点：using指令的正确使用】第二节异常（2学时）、2.1异常的概念2.2异常类2.3try/catch块2.4finally块2.5抛出异常【重点：try/catch/finally块的使用】【难点：抛出异常的处理方法】第三节结构/枚举/数组（1学时）、3.1结构的概念3.2结构的特点3.3结构的使用3.4枚举的使用3.5数组的定义3.6交错数组的定义3.7foreach语句470【重点：结构的应用，枚举的应用，数组的应用】【难点：交错数组的定义，foreach语句】5.第五章桌面应用程序开发进阶（4学时）【目的与要求】：掌握委托的定义和使用，掌握接口的定义和使用，掌握转换的概念和特点，掌握装箱和拆箱操作，掌握泛型的定义的使用方式，基本掌握泛型方法的声明和调用，掌握IEmuerable接口的使用，迭代器的定义和使用。【重点】：委托，接口的定义和使用。【难点】：泛型的灵活应用。【教学建议】：以案例讲解为主，辅之以学生演示或提问。第一节委托（1学时）1.1委托的概念1.2声明委托类型1.3创建委托对象1.4调用委托1.5匿名方法【重点：委托的定义和应用】【难点：匿名方法】第二节接口（1学时）、2.1接口的概念2.2声明接口2.3实现接口2.4接口和as运算符【重点：接口的定义和应用】【难点：as运算符】第三节转换（1学时）、3.1隐式转换的概念3.2强制转换的概念3.3装箱操作3.4拆箱操作【重点：隐式以及强制转换的特点区别，以及使用】【难点：装箱拆箱操作的正确使用】第四节泛型（0.5学时）、4.1泛型的概念4.2声明泛型类4714.3创建构造类型4.4泛型方法【重点：接口的定义和应用】【难点：as运算符】第五节迭代器（0.5学时）、5.1IEmuerable接口的定义方式5.2IEmuerable接口的使用5.3创建构造类迭代器的使用5.4泛型方法【重点：IEmuerable接口的定义和使用】【难点：迭代器的正确使用】（二）实验教学（24学时）目的和要求：通过本实验课程的实践训练，使学生能够较好地掌握桌面应用程序开发知识，包括类的定义与使用，对象的使用，构造函数析构函数的使用，属性的使用，接口，异常，迭代器，泛型，继承等语法知识的实际应用。并能够最终掌握利用C#语言进行项目开发，解决实际的问题。27、必修实验项目序号121122123124125126127项目编码0701350107013502070135030701350407013505070135060701350728、选修实验项目序号项目编码40414243项目名称C#中类的定义及其实例化C#的构造函数与析构函数的使用C#的继承与接口机制C#中异常的处理C#中的委托机制C#中泛型的定义及其实现C#程序设计综合设计项目名称