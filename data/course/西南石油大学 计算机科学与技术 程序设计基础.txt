程序设计基础是计算机类专业必修的一门专业基础课，通过本课程的学习，使学生理解程序设计的基本概念，掌握程序设计的基本思想和方法，具备初步的程序设计能力，能独立使用C语言编写、调试和运行简单的程序，为面向对象程序设计、数据结构、操作系统等后续课程打下基础。三、基本要求1、课程支撑能力1）具有计算思维能力，以计算机科学的基础概念进行问题求解、系统设计；2）掌握基本的程序设计方法、知识与技术，具有程序设计与实现能力。2、课程教学目标1）熟悉c语言集成环境开发环境（vc++、Code::Blocks+gcc+gdb）；2）理解程序设计的基本概念、程序设计的基本思想和方法；3）掌握c语言的语法、基本数据类型、常用屏幕输入输出语句；4）熟练掌握顺序、选择及循环控制结构，熟练掌握函数的定义及调用方法；5）掌握数组、字符串、指针、结构体；6）初步基本具备程序测试和调试的能力。3、达成途径1)课堂以多媒体课件和板书结合，辅之以一定的课堂讨论；2)以程序设计能力培养为主，语法为辅；3)采用能够在线评判的程序设计平台，提供学生自主学习和自主练习的机会。四、教学内容、要求及学时分配（一）理论教学(32学时)第十七章C语言的结构（2学时）目的与要求：了解C语言的发展历程；程序的构成、MAIN函数和其他函数；掌握C语言的基本结构及集成开发环境224重点：集成开发环境难点：程序的构成教学建议：以课件讲解为主，辅之以适当提问第一节C语言的发展历程及作用；1.1了解c语言的发展历史；1.2了解c语言的作用；第二节C语言的基本构成2.1理解c语言的程序结构；2.2掌握main函数的定义方法；第三节集成开发环境3.1了解c语言的常用编程环境；3.2熟悉vc6.0的主要功能及菜单结构；3.3初步掌握一个简单程序的编辑、编译、连接及运行过程；第十八章数据类型及其运算（2学时）目的与要求：理解C的数据类型，掌握其定义方法；理解C运算符的种类、运算优先级和结合性；掌握不同类型数据间的转换与运算；熟悉C表达式类型和求值规则。重点：数据类型、算术表达式难点：自动转换与强制转换教学建议：以课件讲解为主，辅之以适当提问第一节基本数据类型1.1理解数据类型的作用和区别；理解不同数据类型在计算机中的表示和范围；1.2掌握几种基本数据类型（int、float、char）的定义方法及应用场合；第二节常量与变量2.1掌握常量的作用及表示方法；2.2掌握变量的作用及定义方法；2.3理解变量和常量的区别；第三节运算符及表达式3.1掌握赋值语句的作用及用法；3.2掌握常用算术运算符及运算顺序；3.3掌握表达式的构成及语法规则；3.4了解数据类型间的转换规则；3.5了解常用标准数学函数及使用方法。第十九章键盘输入和屏幕输出（2学时）目的与要求：掌握数据的输入与输出，输入输出函数的调用225重点：格式化输入输出语句难点：理解格式字符串的语法第一节格式化输出函数1.1掌握printf函数调用方法及参数结构；1.2掌握格式控制字符的作用及输出效果；1.3了解转义字符的作用。第二节格式化输入函数2.1掌握scanf函数的调用方法及参数结构；2.2理解输入列表中’&’符号的意义；2.3理解字符输入时存在的特殊问题。第二十章选择控制结构（4学时）目的与要求：掌握关系运算符和关系表达式；熟悉if语句；熟悉switch语句；掌握选择结构的嵌套重点：关系运算符、逻辑运算符、条件运算符及表达式难点：选择结构的应用第一节算法概念及描述方法1.1理解算法的基本概念及算法设计的重要性；1.2掌握程序流程图的基本符号及含义；1.3理解程序的三种基本控制结构；1.4了解程序流程图的绘制方法。第二节关系运算符及关系表达式2.1理解关系运算符的含义、表示符号及运算顺序；2.2掌握关系表达式语法；2.3理解‘真’、‘假’的概念及在c语言中的表示；第三节逻辑运算符及逻辑表达式3.1理解“逻辑与”、“逻辑或”、“逻辑非”的概念；3.2掌握逻辑表达式的语法；第四节if条件选择结构4.1理解if语句的作用；4.2掌握if语句的语法格式；第五节switch选择结构5.1理解switch语句的作用；5.2掌握switch语句的语法格式；5.3理解在switch语句中break语句的作用。第二十一章循环控制结构（4学时）226目的与要求：熟悉for循环结构；熟悉while和DOwhile循环结构；掌握continue语句和break语句；掌握循环的嵌套。重点：for循环、while循环难点：循环结构的应用第一节循环结构类型1.1理解循环的概念1.2了解三种基本循环语句及应用场合第二节while和dowhile循环结构2.1掌握while语句及dowhile语句的语法格式；2.2掌握while语句及dowhile语句的使用方法；2.3理解循环体的概念，理解while语句及dowhile语句的区别；2.4理解循环终止条件的作用；第三节for循环结构3.1掌握for语句的语法格式；3.2掌握for语句的使用方法；3.3理解循环变量的作用及用法；第四节continue语句和break语句4.1理解continue语句和break语句的作用及区别；4.2掌握continue语句和break语句的语法;第五节循环嵌套5.1理解多重循环的概念及作用；5.2掌握三种循环结构的嵌套语法；第二十二章函数（6学时）目的与要求：掌握函数的定义方法；理解函数的类型和返回值；掌握库函数的正确调用；熟悉形式参数与实在参数，参数值的传递；掌握函数的正确调用，嵌套调用，递归调用；理解局部变量和全局变量；理解变量的存储类别，变量的作用域和生存期。重点：函数定义及函数调用难点：函数的参数传递第一节函数定义及函数原型1.1理解函数类型、函数名、形式参数、函数体等概念；1.2掌握函数的定义方法；1.3理解函数原型的作用；第二节函数调用及参数传递2.1掌握函数调用的方法；2.2理解虚实结合的概念；2.1掌握函数返回值的使用；227第三节变量的作用域与存储类型3.1理解局部变量及全局变量的作用域概念，理解各种存储类型的概念及区别；3.2掌握局部变量及全局变量的定义方法和使用方法；3.3了解静态变量的使用；第四节模块化程序设计方法4.1了解结构化程序设计方法；4.2了解模块的概念及作用；第二十三章数组（6学时）目的与要求：熟悉一维数组和多维数组的定义、初始化和引用；掌握数组参数传递。重点：一维数组的定义、初始化和引用难点：数组参数传递第一节数组的定义、初始化和引用1.1理解数组、数组元素、数组在计算机中的存放方式等基本概念；1.2掌握数组定义的语法格式；1.3掌握数组初始化的方法；1.4掌握数组的引用方法；第二节数组参数传递2.1掌握一、二数组作为函数参数的定义方法；2.2理解数组的虚实结合2.3了解三维数组的应用；第二十四章指针（2学时）目的与要求：理解指针与指针变量的概念，指针与地址运算符。重点：变量的内存地址、指针变量的定义及初始化难点：指针变量作函数参数第一节指针变量的定义及初始化1.1理解指针的作用，理解指针变量与普通变量的区别；1.2掌握指针变量的定义格式；1.3掌握指针变量的初始化方法；1.4理解空指针的概念；第二节指针变量的使用2.1理解间接寻址运算符的作用，理解取地址运算符的作用；2.2掌握间接寻址运算符的使用方法；2.3掌握取地址运算符的使用方法；2.4掌握指针变量的引用方法；2.5理解指向数组的指针；第三节指针变量作函数参数3.1理解指针变量作为函数参数的作用；3.2掌握指针变量作为函数参数的调用方法；第二十五章字符串（2学时）目的与要求：理解字符串常量概念，掌握字符串的表示和存储，访问和输入输出；掌握字符串处理函数的使用。重点：字符串的输入输出228难点：向函数传递字符串第一节字符串常量1.1理解字符串常量概念，理解字符串与字符的关系，理解字符串结束标志’\0’的作用；1.2理解字符串常量与字符数组的关系；1.3理解字符串常量与字符指针的关系；第二节字符串的访问和输入输出2.1掌握利用scanf、gets函数输入字符串的方法及区别;2.2掌握利用printf、puts函数输出字符串的方法及区别;第三节字符串处理函数3.1理解字符串处理过程；3.2掌握几种基本字符串处理函数的用法；第四节向函数传递字符串4.1掌握字符指针作为形式参数的定义方法及引用方法4.2掌握在调用函数时传递字符串的方法；第二十六章文件操作（2学时）目的与要求：理解文件的概念及作用；了解文件的类型；掌握文件的基本操作方法（文件的打开和关闭、文件的读写）。重点：文件读写方法难点：不同文件格式的理解第一节文件的基本概念1.1理解文件的作用；1.2了解文件的存储方式；1.3了解几种文件类型；第二节文件的打开和关闭2.1理解文件指针的概念及作用；2.2掌握文件的几种打开方式及区别；2.3掌握文件的关闭方法；第三节文件的读写操作3.1掌握文件读函数的使用方法；3.2掌握文件写函数的使用方法；（二）实验教学（32学时）目的和要求：《程序设计基础》课程是一门重要的专业必修课，主要任务是使学生掌握程序设计的基本概念与结构化程序设计方法。实验课是本课程重要的教学环节，目的是使学生加深对讲授内容的理解，熟悉所用计算机系统的操作方法，学会上机调试程序，提高动手能力和分析、解决问题的能力。通过实验，应达到以下几个教学目的：掌握各种类型数据及赋值语句的使用；掌握结构化程序设计方法；掌握数组的定义、赋值、输入输出；掌握函数定义及函数调用；初步学会使用文件的打开、关闭、读、写等文件操作函数。实验教学基本要求：要求掌握程序设计的原理、思想、方法，能够熟练运用VC开发环境编写和调试程序；进一步掌握利用C语言编写解决实际问题的方法和技229术；为学习《数据结构》、《面向对象程序设计》等课程打下坚实的基础。学生通过实验能够将理论所学应用于实践，能根据给定的问题独立设计程序并上机调试程序运行通过，获得上机调试能力、分析问题与解决问题能力的较大提高，具有良好的程序设计素质。上机实验要求：准备好上机所需的程序；上机输入和调试自己所编写的程序；上机结束后，整理出实验报告，实验报告应包括以下内容：实验项目名称；算法分析；程序清单；运行结果；对运行情况所作的分析以及本次调试程序所取得的经验，如果程序未能通过，应分析其原因。项目名称项目名称2、必修实验项目序号项目编码1107013201熟悉C语言开发环境1207013202简单C程序编程练习1307013203选择结构编程练习1407013204循环结构编程练习1507013205函数编程练习1607013206数组编程练习1707013207指针编程练习1807013208字符串编程练习1907013209程序设计综合实验3、选修实验项目序号项目编码1234