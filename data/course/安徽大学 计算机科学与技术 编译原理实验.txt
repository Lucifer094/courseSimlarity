《编译原理实验》课程以本科生为授课对象，该课程是计算机专业必修的专业核心课，是计算机学科的实验课程。要求学生掌握高级语言编译程序的初步设计和实现的基本技能，并能为不同模式和不同领域的语言的实现方案寻找解决途径。通过对该课程的学习，使学生对《编译原理》相关理论知识深入理解和熟练掌握，并将其运用到软件开发中，提高学生的应用程序设计能力，提高分析问题、解决问题的能力，为后续课程及其他程序设计课程的学习和应用打下基础。二、课程具体内容及基本要求实验1Chomsky文法类型判断（4学时）基本要求：（1）输入一组任意的文法规则(文法规则应形式简化，输入方便，至少五条)；（2）输出相应的Chomsky文法类型，同时输出相应的文法四元组。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。实验2正规文法和正规式等价转换（6学时）基本要求：（1）要实现“输入正规文法”、“输入正规式”、“输出正规文法”和“输出正规式”四个图形按钮；（2）实现互转的各种情况对应的算法。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。实验3不确定的有穷自动机的确定化（4学时）基本要求：（1）输入NFA的定义形式，输出等价的DFA的定义形式；（2）实现计算闭包closure（I）的算法；（3）实现转换函数move（I，a）的算法。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。实验4确定有穷自动机的最小化（4学时）基本要求：(1)输入DFA，输出等价的状态数最少的DFA；(2)实现子集划分算法；(3)输入和输出均以定义的形式。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。实验5LL(1)文法的转换和判断（8学时）基本要求：（1）实现能推导出空的非终结符的算法；（2）实现First,Follow和Select的求解算法；（3）对于含有左递归的文法，要指出左递归的类型。对于直接左递归，可将其改为直接右递归；对于间接左递归，则应按照算法给出非终结符不同排列的等价的消除左递归后的文法（应该有n！种）；（4）实现提取左公共因子和消除左递归的算法；（5）输入任意一个文法，依次输出：i)是否为LL(1)文法；ii)若是LL(1)文法，输出每条产生式的select集；iii）若不是LL(1)文法，看看是否含有左公共因子或者含有左递归，并用相应的算法将非LL(1)文法变成LL(1)文法，并输出新文法中每条产生式的select集。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。实验6自动生成LR（0）分析表（8学时）基本要求：（1）实现计算闭包函数CLOSURE的算法；（2）实现转向函数GO(I,X)的算法；（3）实现ACTION子表和GOTO子表的构造算法；（4）输入任意的压缩了的上下文无关文法，输出相应的LR（0）分析表（以表格形式输出）。通过平时考核与期末考核来对学生专业核心知识掌握进行考核，主要可对“毕业要求3设计/开发解决方案”中的“指标点3-4掌握程序设计、算法分析与设计的基本方法，能够设计高效可靠的软件系统”的指标达成度进行评估，并了解本专业的前沿发展现状和趋势，对新知识、新技术有较敏锐的洞察能力。