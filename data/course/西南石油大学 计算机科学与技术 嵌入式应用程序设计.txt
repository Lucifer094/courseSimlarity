本课程是一门介绍运用嵌入式系统的基本理论和设计方法，分析和解决嵌入式应用程序设计开发问题的课程，是计算机科学与技术专业嵌入式软件开发方向的一门专业方向课程。本课程的目的是学习和掌握嵌入式应用程序的设计与开发，并使学生受到必要的嵌入式应用程序开发的训练。本课程的任务是让学生了解嵌入式应用程序开发的基本概念和核心理论；掌握一定的嵌入式系统设计、分析、调试和维护能力，并对一些新技术、新产品以及嵌入式系统的发展方向有一定的了解，从而为进一步学习计算机本专业后继课程和从事嵌入式系统产品、电子产品的生产与开发相关工作奠定一定的基础。三、基本要求1、课程支撑的毕业要求1）具有程序设计与实现能力：运用嵌入式C语言实现应用程序。2）具有系统设计能力：嵌入式应用程序的结构及功能设计。3）具有系统的开发能力：嵌入式应用程序的开发流程、编码实现。4）具有系统应用能力：嵌入式应用程序的调试和维护。2、课程教学目标1）理解嵌入式系统的定义、应用领域与特点、发展历程及趋势，以及嵌入式硬件系统的组成。深入体会嵌入式软件的特点、体系结构、运行流程。2）能针对嵌入式应用特定问题需求和给定的数据结构进行程序开发实现，并掌握一定的实验和调试技能，包括文件I/O编程、多任务编程、网络编程等。3、达成途径3901）以能力培养为导向，注重理解各种嵌入式应用程序的设计流程、各种操作实现的思想和实现方法、并能应用于解决实际问题。2）通过“系统结构-开发平台特性-应用实现”的教学过程，使学生理解嵌入式应用设计开发的基本知识；引导学生养成从“问题解决者角度”思考的学习方法，深入体会借助于特定嵌入式平台快速设计和开发的思想和分析解决问题的方法，能合理运用于设计实现较为复杂的嵌入式应用程序。3）多媒体课件与板书结合。应根据课程不同内容的特点进行选择。四、教学内容、要求及学时分配（一）理论教学(28学时)第1章嵌入式系统基础（2学时）目的与要求：了解嵌入式系统的发展概况和发展方向，了解ARM处理器系列，掌握s3c2410处理器硬件特性，掌握嵌入式软件开发流程。难点与重点：ARM处理器，嵌入式软件开发流程，s3c2410处理器硬件特性，交叉编译/调试。教学建议：多媒体辅助教学，教学方法以启发式为主。第一节嵌入式系统基础（2学时）1.1了解嵌入式系统的发展概况和发展方向，ARM处理器系列1.2掌握s3c2410处理器硬件特性，嵌入式系统体系结构，嵌入式软件开发流程【重点】ARM处理器，嵌入式软件开发流程【难点】s3c2410处理器硬件特性，交叉编译、交叉调试第2章嵌入式LinuxC语言基础（2学时）目的与要求：掌握预处理，包括预定义、文件包含、条件编译，掌握程序的可移植性考虑，熟练掌握C语言中的内存分配，包括程序所占内存分类、堆与栈的特性及区别等，掌握ARMLinux内核常见数据结构。难点与重点：预处理，程序的可移植性考虑，C语言的内存分配，ARMLinux内核常见数据结构。教学建议：多媒体辅助教学，教学方法以启发式为主。第一节嵌入式Linux开发环境的搭建（2学时）1.1掌握预处理，C语言中的内存分配1.2掌握ARMLinux内核常见数据结构【重点】预处理，程序的可移植性考虑，C语言中的内存分配，ARMLinux内核常见数据结构。【难点】堆与栈的区别，ARMLinux内核常见数据结构。第3章嵌入式Linux文件I/O编程（6学时）391目的与要求：了解Linux系统调用及用户编程接口、虚拟文件系统、通用文件模型、Linux中文件及文件描述符，掌握和应用底层文件I/O操作，包括基本文件操作、文件锁、多路复用等，掌握和应用嵌入式Linux串口应用编程，掌握和应标准I/O编程，包括打开文件、关闭文件等基本操作，以及字符I/O、行I/O、格式化I/O等。难点与重点：文件操作，标准I/O编程，文件锁，多路复用，嵌入式Linux串口应用编程。教学建议：多媒体辅助教学，教学方法以启发式为主。第一节Linux文件与I/O概述（3学时）1.1了解Linux系统调用及用户编程接口1.2掌握虚拟文件系统、通用文件模型、Linux中文件及文件描述符1.3应用基本文件操作，底层文件I/O操作【重点】文件操作【难点】文件锁第二节串口与I/O操作（3学时）2.1掌握标准I/O编程2.2应用嵌入式Linux串口应用编程【重点】标准I/O编程，串口应用编程【难点】多路复用第4章嵌入式Linux多任务编程（8学时）目的与要求：了解任务、进程、线程的概念、特点和区别，掌握进程编程常用函数，了解和掌握Linux守护进程的概念、编写方法以及出错处理，掌握进程间通信方式，了解线程属性，掌握和应用线程间同步与互斥控制，应用线程编程常用函数。难点与重点：任务、进程、线程的区别，进程与线程编程控制，进程间同步、互斥与通信。教学建议：多媒体辅助教学，教学方法以启发式为主。第一节嵌入式Linux多任务概念（2学时）1.1掌握Linux下多任务机制（任务、进程、线程）1.2应用进程编程控制【重点】任务、进程、线程的区别，进程编程控制【难点】进程编程控制第二节多任务编程（2学时）2.1掌握守护进程机制2.2应用多任务编程【重点】多任务编程、Linux守护进程【难点】多任务编程392第三节多任务通信（2学时）3.1掌握Linux下多任务同步、互斥与通信机制3.2应用进程通信【重点】进程间通信【难点】信号量通信、管道通信第四节多线程编程（2学时）4.1掌握多线程机制4.2应用多线程编程（线程属性、线程之间的同步与互斥等）【重点】多线程机制，线程之间的同步与互斥【难点】线程同步与互斥第5章嵌入式Linux网络编程（6学时）目的与要求：了解TCP/IP的分层模型及特点、核心协议，掌握和应用网络初级编程知识，包括套接字定义、类型及编程，地址处理的数据结构、格式转化、名字地址转化，以及顺序处理优先顺序，掌握和应用解决I/O多路复用的解决方法，包括非阻塞和异步式处理以及多路复用处理，了解web服务器的工作原理，应用简单web服务器的编程实现。难点与重点：TCP/IP，套接字，地址及顺序处理，非阻塞和异步式处理，多路复用处理，web服务器。教学建议：多媒体辅助教学，教学方法以启发式为主。第一节Linux网络机制概述（3学时）1.1了解TCP/IP的分层模型及特点、核心协议1.2掌握网络初级编程知识1.3应用网络通信实现【重点】TCP/IP，套接字，地址及顺序处理【难点】套接字编程第二节Linux网络编程（3学时）2.1了解web服务器的工作原理2.2掌握解决I/O多路复用的解决方法2.3应用简单web服务器的编程实现【重点】多路复用处理，web服务器【难点】地址处理、非阻塞和异步I/O，简单web服务器第6章综合实例（4学时）目的与要求：了解典型嵌入式系统应用程序开发流程，掌握嵌入式系统应用程序设计方法，应用特定应用背景的嵌入式系统应用程序设计与开发。难点与重点：嵌入式系统应用程序设计方法。393教学建议：多媒体辅助教学，教学方法以讨论式为主。第一节综合实例（4学时）1.1了解典型嵌入式系统应用程序开发流程1.2掌握嵌入式系统应用程序设计方法1.3应用特定应用背景的嵌入式系统应用程序设计与开发【重点】嵌入式系统应用程序设计方法【难点】嵌入式系统应用程序设计方法（二）实验教学（20学时）目的和要求：熟悉本课程相关的研究方法，掌握本课程有关嵌入式应用程序设计的基本操作方式方法，完成嵌入式文件、I/O、进程、线程、网络编程等方面的实验内容，分析、解释实验结果，形成结论并提出建议，达到能解决嵌入式应用程序设计与开发的要求。序号项目编码必修实验项目项目名称6307010260Linux文件读写及上锁6407010261Linux多任务编程6507010262编写守护进程6607010263守护进程编写进阶训练6707010264有名管道通信6807010265共享内存6907010266多线程实验7007010267NTP协议实现7107010268IO多路复用7207010269网络编程实现