软件构造是软件工程专业的专业必修课，主要讲授软件构造的基本思想、方法、技术和规范。主要内容包括软件构造的基本原则、构造技巧、形式化方法以及编码规范、构造工具、测试与性能优化等。通过本课程的学习，了解软件构造的基本思想、方法和技术，掌握规范说明语言与方法的应用，理解形式化软件构造方法，掌握高效的软件构造方法，理解并发软设计，以培养学生良好的编码习惯和编码技巧。二、课程具体内容及基本要求第一章软件构造概述(2学时)基本内容包括：软件构造的概念；构造的目的；重要性；常用隐喻等；工具与环境1.基本要求掌握软件构造的基本概念、过程，了解软件构造的目的和重要性。了解软件隐喻的重要性，掌握软件隐喻的常用表现形式。2.重点、难点重点：软件构造的含义、重要性；软件隐喻的重要性和表现形式。难点：软件隐喻的表现形式，包括软件书写、软件播种、软件珍珠培植法、软件创建、智能工具箱、符合隐喻。3.作业及课外学习要求：基于软件工程的基础知识，结合自身学习软件开发的体会，理解软件构造的过程和重要性。通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第二章模块设计(2学时)基本内容包括：自顶向下；自底向上；信息隐蔽；解耦；开放/闭合原则1.基本要求掌握模块的创建方法，模块实现信息隐蔽的机制，模块内部的内聚性，模块之间的耦合性2.重点、难点重点：强调内聚性和松散耦合提高率较高层次的抽象性。难点：掌握面向对象的基本原则之一开放/闭合原则。3.作业及课外学习要求：采用自顶向下和自底向上的方法设计模块，结合实例分析模块内聚和耦合的类别。通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第三章类的设计和使用(4学时)基本内容包括：类设计包括抽象数据类型、类和对象、信息隐蔽、继承和聚集、多态、动态绑定等；接口设计包括抽象、封装；使用范围；设计准则包括副作用、成员函数参数设置、大小等。1.基本要求掌握类设计的基本原则、方法，熟悉接口设计的作用和原理，掌握并运用设计准则。2.重点、难点重点：类设计和接口设计。难点：设计准则的掌握和运用。3.作业及课外学习要求：通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第四章代码复用设计(4学时)基本内容包括：包与库；重载；泛化；设计模式；配置式编程1.基本要求掌握代码复用的常用技术，包括包、库、重载、泛化、设计模式、配置式编程。2.重点、难点重点：掌握包、库、重载、泛化等代码复用技术。难点：熟悉经典的软件设计模式。3.作业及课外学习要求：通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第五章函数与类方法设计(2学时)基本内容包括：可靠性的基本概念；断言、前置与后置条件、不变式、非法输入处理、预计变更等防御性程序设计。1.基本要求了解可靠性的基本概念和重要性。掌握防御性程序设计技术，包括断言、前置与后置条件、不变式、非法输入处理、预计变更。2.重点、难点重点：掌握防御性程序设计技术。难点：防御性程序设计技术的运用。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第六章复杂功能代码的计(3学时)基本内容包括：基于表格（直接存取、变址存取、阶梯存取）的代码设计；基于状态机的代码设计；基于语法输入的代码设计1.基本要求了解基于表格的代码设计方法，掌握三种常见的表格驱动方法即直接存取、变址存取、阶梯存取；了解基于状态机和语法输入的代码设计。2.重点、难点重点：掌握三种常见的表格驱动方法即直接存取、变址存取、阶梯存取。难点：基于状态机和语法输入的代码设计。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第七章错误与异常代码设计(4学时)基本内容包括：错误和异常的基本概念；错误处理；异常处理；容错。1.基本要求理解错误和异常的基本概念，掌握错误处理和异常处理的基本方法。2.重点、难点重点：掌握错误处理和异常处理的基本方法。难点：运用错误处理和异常处理的基本方法。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第八章特殊功能代码的设计(2学时)基本内容包括：并发程序设计的背景、策略；同步与通信；基于平台的代码设计1.基本要求了解并发程序设计的背景、策略，理解程序系统中的同步与通信机制。2.重点、难点重点：并发程序设计的同步与通信。难点：程序系统中的同步与通信机制。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第九章代码的测试与调试(5学时)基本内容包括：单元测试；性能分析和调优；剖面、切片特殊测试工具的使用。1.基本要求理解单元测试的概念、方法和技术，掌握剖面、切片特殊测试工具的使用，掌握常用的代码调试技术2.重点、难点重点：测试技术和代码调试技术。难点：测试用例的生成方法；循环、逻辑、数据转换、表达式、子程序等的代码调试技术。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第十章构造管理(1学时)基本内容包括：项目大小对构造过程的影响；版本控制策略及工具。1.基本要求理解软件构造管理的意义和作用，掌握版本控制的策略和工具。2.重点、难点重点：掌握版本控制的策略和工具。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”第十一章形式语言基础(3学时)基本内容包括：状态机；正则表达式；BNF范式。1.基本要求理解状态机的概念，掌握正则表达式的使用方法，理解并掌握BNF方式的表达方法2.重点、难点重点：正则表达式的使用方法。难点：理解并掌握BNF方式的表达方法。3.作业及课外学习要求通过期末笔试的考试来对学生专业核心知识掌握进行考核，“毕业要求1工程知识”中的“指标点1_2掌握软件工程专业基本理论，以及基本分析与设计方法，用于解决复杂软件工程问题。”，并可以支撑“毕业要求2问题分析”中的“指标点2_1能够将数学与自然科学的基本概念运用到工程问题的适当表述之中；2_2能够针对一个系统或者过程选择一种数学模型，并达到适当的精度要求。”