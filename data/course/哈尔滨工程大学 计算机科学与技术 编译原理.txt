本课程是计算机专业的重要专业课之一，主要讲述程序设计语言编译构造的基本原理和基本实现方法。本课程主要讲授形式语言、有限自动机、自上而下语法分析、中间代码生成、存储器的分配与管理、符号表的组织与管理、代码生成与优化问题等内容。通过本课程学习，使学生掌握编译的基本概念、原理和方法，并具能正确地、熟练地设计编译小程序,从而掌握编译的基本实现方法。三、教学基本要求通过本课程的学习，应使学生具有应用编译知识的能力、能够解决编程设计中遇到的问题、拥有编译技巧的编程素质，具体应达到以下基本要求：（１）正确理解什么是编译程序；了解编译程序工作的基本过程及其各阶段的基本任务；熟悉编译程序总框；了解编译程序的生成过程和构造工具。（2）理解程序语言词法、语法和语义等概念；熟悉高级程序语言一般结构和主要共同特征。正确理解上下文无关文法基本概念，包括：文法的定义、编写、句型、句子、语言、语法树、二义性等。（3）理解词法分析器功能及形式；熟练掌握词法分析器设计的原理，掌握运用状态转换图进行词法分析器设计。143（4）正确理解自上而下分析的基本思想；熟练掌握递归下降分析基本方法：消除左递归，消除回溯，构造递归下降子程序；掌握预测分析程序的基本原理和预测分析表构造；理解 LL(1)方法的定义。（5）正确理解自下而上语法分析的基本思想，以及归约、短语、句柄、分析树等概念；掌握算符优先分析基本方法：算符优先表和和算符优先函数构造技术。（6）正确理解目标程序运行进存储空间的使用和组织管理方式；理解静态分配和动态存储分配基本思想；掌握栈式动态分配中活动记录的作用、组织、内容及使用；了解嵌套过程语言程序运行时整个运行栈的内容的组织。（7）熟悉常见的几种中间语言：四元式、三元式、逆波兰表示；掌握各种语句到四元式的翻译方法。（8）理解和掌握代码生成和优化的方法和技术。四、教学内容与学时分配共30学时理论课，具体内容如下：1 概论（4学时）1.1编译程序，编译过程概述，编译程序的结构1.2编译程序与程序设计环境，编译程序生成，学习构造编译程序。2 文法与形式语言（4学时）2.1文法和形式语言的定义，文法的分类，2.2文法的变换，正规表达式2.3有限自动机的初步分析。3 词法分析（4学时）3.1词法分析程序的任务，词法分析程序的设计3.2正规表达式，确定的有限自动机3.3非确定的有限自动机4 自顶向下的语法分析（4学时）4.1消除左递归，判断避免回溯4.2语法分析器的功能，递归下降子程序1444.3 LL（1）自顶向下的语法分析，5 符号表（2学时）内容包括：符号表的作用，符号表的内容，符号表栏目的组织和符号表的操作和结构6 运行时环境（4学时）6.1目标程序运行时的活动，运行时存储器的划分，静态存储管理，简单的栈式存储分配的实现6.2嵌套过程语言的栈式实现，堆式动态存储分配。7 中间代码（4学时）7.1中间语言，说明语句，赋值语句的翻译，布尔表达式的翻译7.2控制语句的翻译，过程调用的中间语言形式，8 代码生成（2学时）介绍目标代码结构, 包括:赋值语句的目标结构,当型语句的目标结构,过程说明和过程语句的目标结构;还有代码生成的举例说明。9 代码优化（2学时）包括优化概述,表达式的优化和循环语句的优化。五、教学方法及手段理论教学（课堂讲授）：使用中英双语版教材，多媒体双语教学以及课堂讨论授课形式。六、实验（或）上机内容七、前续课程,后续课程前续课程: 数据结构、数据库原理后续课程:编译原理课程设计