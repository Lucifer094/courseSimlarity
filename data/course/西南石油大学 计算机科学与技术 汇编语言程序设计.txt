时间：2016年3月本课程是计算机原理的底层程序实践，是计算机专业人员开发与硬件相关的软件和开发系统底层软件所必须的一门课程，是计算机专业人员接受的重要专业基础训练之一，是计算机科学与技术专业学生的专业基础课程。本课程的目的使学生掌握计算机系统软件和硬件方面的基础知识；让学生熟悉一种机器的指令系统及其应用；培养学生的程序设计能力和程序分析能力；培养学生的抽象思维，培养学生的自学能力、分析问题和解决问题的能力以及严谨细致的学习作风。使学生掌握IBM-PC计算机CPU的结构，存储器的组织方式；掌握IBM-PC计算机的寻址方式；掌握8086／8088指令系统，并了解80x86、Pentium增强指令和扩充指令；掌握基本的汇编语言程序设计方法和技能；掌握汇编语言程序的上机方法；了解高级汇编语言技术；掌握高级语言的基本语法现象的机器语言实现原理；并使学生能够应用所学的基础知识，提高高级语言程序设计和开发的质量和能力，使学生具备一定的系统软件开发能力；增强学生分析和解决工程实际问题的能力。三、基本要求（宋体，五号）1、课程支撑能力21)理解计算机专业所需的信息科学相关知识，掌握信息编码的基本理论和分析方法，并能运用于解决复杂计算问题。22)理解程序运行机制，掌握问题求解、系统设计以及算法与程序设计的基本方法，能合理运用于复杂软件系统的分析、设计与实现。23)综合及系统知识：建立计算机系统的整体观，从软件的角度理解计算机系统的工作机理。24)能针对特定需求独立进行算法设计和程序实现，并能测试验证算法与程序的正确性。25)软件设计与实现：能针对特定需求完成计算机软件系统或模块的设计与实现。2、课程教学目标1)了解当今计算机程序的存储和工作方式，指令和数据在计算机中的表示及应用方法2)了解8086/8088CPU指令系统，各指令的功能，出入口参数及执行过程、影响标志等。3)掌握指令助记符的书写格式，知道指令助记符与汇编语言的关系与区别。4)熟练掌握汇编语言程序的编写、调试技巧。掌握伪指令、宏汇编等高级汇编语言格式。5)掌握I/O接口程序设计技术3、达成途径14)通过汇编语言程序设计编写实现，培养学生掌握问题求解与程序设计的基本方法和能力。15)通过高级语言反汇编代码使得学生掌握高级语言的基本实现原理及各种语法现象的具体实现。36516)通过底层汇编代码分析及汇编指令，掌握程序的基本工作原理及系统的基本工作原理。四、教学内容、要求及学时分配（一）理论教学(32学时)第五十二章基础知识（2学时）目的与要求：领会汇编语言的概念及特点，掌握数据的表示方式。难点与重点：汇编语言的基本概念、数据的表示和类型、不同类型信息在计算机中的表示。教学建议：在讲授本章基础知识的过程中必须适当联系相关知识内容进行适当的扩充。1.1掌握进位记数制与不同基数的数之间的转换1.2掌握二进制数和十六进制数运算1.3掌握计算机中数和字符的表示1.4掌握几种基本的逻辑运算【重点】：汇编语言的基本概念、数据的表示和类型【难点】：不同类型的信息在计算机中的表示第五十三章80x86计算机组织（2学时）目的与要求：了解8086CPU的基本结构，掌握寄存器的作用，了解8086寄存器组中的每个寄存器的作用，领会8086CPU地址形成的原理，在地址形成时采用讨论的方法，针对采用物理地址编程带来的问题进行引入，最终让学生具有逻辑地址的概念，同时对体系结构中的相关知识有个预了解。难点与重点：8086微处理器基本概念、8086寄存器组、存储器分段和地址的形成，寄存器组中的寄存器的概念、存储器分段和地址的形成、冯.诺依曼思想的体现教学建议：通过简单程序的执行过程体现冯.诺依曼体系结构的思想，通过程序重定位说明为什么要进行存储器分段。1.180x86微处理器1.2基于微处理器的计算机系统构成1.3中央处理机1.4存储器1.5外部设备【重点】：8086微处理器基本概念、8086寄存器组、存储器分段和地址的形成【难点】：寄存器组中的寄存器的概念、存储器分段和地址的形成、冯.诺依曼思想的体现第五十四章80x86的指令系统和寻址方式（6学时）目的与要求：使得学生了解为什么需要多种寻址方式，每种寻址方式在什么场合应用，灵活采用合适的寻址方式带来的好处。熟悉80X86的指令系统，掌握指令构成的基本部分，掌握每条指令使用时的具体要求及限制，了解指令执行后对标识寄存器的影响。难点与重点：寻址方式的概念及8086各种寻址方式，各种寻址方式的特点及使用场合，如何合理地应用各种寻址方式，指令格式及数据操作指令堆栈操作指令，指令执行对标识寄存器的影响，堆栈的变化及参数传递的实现，加减运算、乘除运算、逻辑运算、移位指令、转移指令，多字节运算的实现方法，混合数据运算的实现，逻辑运算移位指令在硬件相关操作操作的应用，计算机中程序跳转的实现，条件转移和无条件转移的运用。366教学建议：采用多媒体技术，用动画展示存储器寻址方式，说明计算机中算法运算及逻辑运算实现的基本原理，说明栈的基本用处。第一节8086的寻址方式（2学时）1.1什么是寻址方式1.2寻址方式的作用1.38086各种寻址方式及适用场合【重点】：寻址方式的概念及8086各种寻址方式【难点】：各种寻址方式的特点及使用场合，如何合理地应用各种寻址方式第二节8086的指令系统（1）（2学时）2.1指令的基本格式2.2数据传送指令2.38086堆栈操作指令及高级语言中参数传递的实现2.4标识操作指令【重点】：指令格式及数据操作指令堆栈操作指令【难点】：指令执行对标识寄存器的影响，堆栈的变化及参数传递的实现第三节8086的指令系统（2）（2学时）3.1加减运算指令3.2乘除运算指令3.3逻辑运算和移位指令3.4转移指令【重点】：加减运算、乘除运算、逻辑运算、移位指令、转移指令【难点】：多字节运算的实现方法，混合数据运算的实现，逻辑运算移位指令在硬件相关操作操作的应用，计算机中程序跳转的实现，条件转移和无条件转移的运用。第五十五章汇编语言程序格式（4学时）目的与要求：掌握汇编语言中的语句类型、表达式、变量、常量、标号、伪指令语句，掌握汇编语言源程序的基本构成部分及书写规则及组织方式，通过顺序程序的设计了解汇编语言的基本语法及指令的基本使用方式。难点与重点：伪指令和指令语句的区别，数据定义形式，关于汇编语言中符号对应的地址的理解，数值表达式和地址表达式的区别，汇编语言源程序的多种组织方式，汇编语言中的数据类型与高级语言中的数据类型对比，汇编语言中数据类型的特点，基本程序设计方法的掌握，查表法的应用，对内存代码数据的理解。教学建议：通过实例说明多种数据类型存在的必要，机器内数据的存放形式与任务本身有关，通过实例说明地址的概念，通过扩展说明伪指令和指令语句的区别。第一节汇编语言的语句（2学时）1.1汇编语言的语句1.2变量常量及标号1.3常用伪指令语句1.4源程序组织【重点】：汇编语言语句367【难点】：伪指令和指令语句的区别，数据定义形式，关于汇编语言中符号对应的地址的理解，数值表达式和地址表达式的区别，汇编语言源程序的多种组织方式，汇编语言中的数据类型与高级语言中的数据类型对比，汇编语言中数据类型的特点。第二节顺序程序设计（2学时）2.1顺序程序设计举例2.2查表法的使用【重点】：汇编语言程序的基本设计方法【难点】：基本程序设计方法的掌握，查表法的应用，对内存代码数据的理解。第五十六章循环与分支程序设计（4学时）目的与要求：掌握汇编语言中循环程序和分支程序的基本写法，掌握多路分支的写法，掌握通过条件跳转语句和无条件跳转指令编写程序的方法。解释计算机中非顺序程序执行的过程。难点与重点：分支语句的实现，使用条件转移指令时的限制，多重嵌套的实现及注意事项，地址表的实现方法，DOS菜单的设计及实现；多重循环的嵌套注意问题、高级语言对应的循环控制语句在汇编语言中的实现。教学建议：通过高级语言的循环和分支的实现基本构成要素引入汇编语言的基本实现，同时通过汇编语言的具体实现反射出高级语言中循环和分支实现具体原理。第一节分支程序设计及举例（2学时）1.1汇编语句分支功能的实现方法1.2分支程序设计举例1.3多路分支实现方法及举例【重点】：分支语句的实现【难点】：分支语句的实现，使用条件转移指令时的限制，多重嵌套的实现及注意事项，地址表的实现方法，DOS菜单的设计及实现。第二节循环程序设计及举例（2学时）2.1循环的类型及对应实现方法2.2循环设计举例2.3多重循环的实现及举例【重点】：循环的实现【难点】：多重循环的嵌套注意问题、高级语言对应的循环控制语句在汇编语言中的实现第五十七章子程序结构（6学时）目的与要求：掌握汇编语言中子程序的实现方法，理解高级语言中函数的实现及调用，理解高级语言中指向函数的指针的实现，掌握函数（子程序）的参数传递方法，掌握函数的返回值的处理方式，掌握函数的执行过程，掌握系统功能调用（API）的概念，掌握系统功能调用的基本方法，掌握汇编中的文件相关操作，递归的实现原理及方法，掌握现场保护的概念。难点与重点：计算机是如何实现函数调用的，过程调用语句的分类及具体应用场合，返回指令的后的常量对堆栈的变化的影响，为什么要进行现场保护剂恢复，相关概念在操作系统中的扩展；高级语言中四种参数传递的体现，堆栈的作用，子程序调用中函数返回值的处理，递归程序的实现方法及对堆栈的要求；系统调用的理解，将功能调用扩展到其他系统中。368教学建议：通过高级语言的函数的调用过程引申出其中必须实现的隐含功能，讲解汇编指令子程序的基本实现过程，通过参数传递的方法让学生进一步掌握高级语言中的传值传地址的理解，通过语言的函数库引申出系统的函数库，并讲明DOS系统中系统函数提供的形式。第一节子程序实现及举例（2学时）1.1过程调用及返回1.2过程定义语句及现场保护恢复1.3子程序设计举例【重点】：子程序调用及返回指令、过程调用语句【难点】：计算机是如何实现函数调用的，过程调用语句的分类及具体应用场合，返回指令的后的常量对堆栈的变化的影响，为什么要进行现场保护剂恢复，相关概念在操作系统中的扩展。第二节子程序参数传递实现（2学时）2.1子程序参数传递的四种方式及在高级语言中的应用举例2.2子程序参数传递设计举例2.3递归程序的设计及实现【重点】：四种参数传递的方法及实现原理【难点】：高级语言中四种参数传递的体现，堆栈的作用，子程序调用中函数返回值的处理，递归程序的实现方法及对堆栈的要求。第三节DOS功能及调用（2学时）3.1DOS功能调用概述3.2基本IO功能及文件操作【重点】：DOS功能调用的概念及常用系统功能调用【难点】：系统调用的理解，将功能调用扩展到其他系统中第五十八章高级汇编语言技术（2学时）目的与要求：掌握用户自定义数据类型结构和记录的使用方法，理解高级语言中结构记录的具体实现，掌握汇编语言宏指令的使用，理解高级语言中宏的实现原理，掌握汇编语言中条件汇编指令的使用，理解高级语言中条件汇编的实现原理。难点与重点：记录和机构、宏、条件汇编的实现、针对汇编语言的实现方式了解高级语言中对应的实现原理教学建议：通过简单实例说明为什么需要这种类型的集合类型的数据；说明条件编译存在的必要性，并以高级语言的条件编译语句进行对比。1.1记录和结构1.2宏指令1.3条件汇编【重点】：记录和机构、宏、条件汇编的实现【难点】：针对汇编语言的实现方式了解高级语言中对应的实现原理第五十九章输入输出程序设计（6学时）目的与要求：掌握输入输出的基本指令和概念，掌握CPU与外设进行数据交互的方式，掌握系统基本输入输出BIOS相关369难点与重点：8086的端口操作方式，数据传送方式，查询传送数据方式、中断的概念，中断服务程序的设计、系统服务、中断响应过程、中断优先级、中断处理程序的编写、键盘处理程序的处理过程及方式，输入输出的概念教学建议：说明端口存在的必要性，以多个外设说明中断存在的必要性，以函数调用返回的过程进行类比说明中断的处理过程，具体输入输出的举例说明第一节输入输出的基本概念及查询方式传送数据（2学时）1.1输入输出基本概念1.2数据传送方式1.3查询式传送数据【重点】：8086的端口操作方式，数据传送方式，查询传送数据方式【难点】：不同数据传送方式在不同场合的应用、存取RT/COMSRAM第二节中断概念及中断传送方式（2学时）2.1中断的相关概念2.2中断处理程序的设计及举例【重点】：中断的概念，中断服务程序的设计【难点】：系统服务、中断响应过程、中断优先级、中断处理程序的编写第三节输入输出系统BIOS（2学时）3.1基本输入输出系统概述3.2键盘处理程序【重点】：键盘处理程序的处理过程及方式，输入输出的概念【难点】：键盘处理程序的处理过程及方式的理解（二）实验教学（XX学时）目的和要求：了解汇编语言程序设计的一般概念、掌握程序设计基本技术和常用技巧，掌握宏和模块化程序设计的技术方法，了解高级语言的混合编程熟悉本课程相关的研究方法，通过上机实践熟悉上机操作和程序调试技术，通过对汇编语言程序设计课程的学习，加深对计算机工作原理的理解，培养学生分析、解释实验结果，形成结论并提出建议的能力，11、必修实验项目序号项目编码项目名称4007010431汇编语言实验环境及DEBUG使用4107010248顺序程序设计4207010229分支程序设计4307010230循环程序设计4407010231子程序设计4507010232分支循环子程序综合设计4607010233查询传送数据程序设计4707010234中断服务程序设计12、选修实验项目序号项目编码2407010235主引导记录的备份与恢复项目名称370