本课程是一门运用面向对象的思想和方法，分析和解决面向对象的软件设计和实现问题，是计算机科学与技术专业的一门专业基础课程。本课程的目的是培养学生具备面向对象的分析、设计与实现的能力，并使学生通过对本课程的学习，能够使学生掌握面向对象语言的基本语法，能够编写基本的面向对象程序；并且能够让学生在面向对象的基础理论和具体应用上有更加进一步的理解。本课程的任务是向学生系统讲授构建面向对象程序的思想、类的相关知识和具体应用、面向对象的理论和实现。具体来讲，要向学生讲授什么是类和对象，如何创建类和对象，关键字、运算符、语句构成、编程结构、类的层次和关系、异常处理、继承、多态、事件处理、文件管理以及创建面向对象应用程序的方法，使学生具有运用面向对象思想进行应用软件开发的能力。三、基本要求1、课程支撑能力1）具有计算思维能力；2）具有程序设计与实现能力。2、课程教学目标1）掌握面向对象的分析与设计方法。2）掌握面向对象思想并能利用相关程序语言进行实现。3、达成途径1）教师应采用案例式、讨论式等教学方法开展教学，并紧密结合上机练习。2172）以能力培养为导向，学生则需要主动完成教材相关章节阅读，同时按照要求完成一定数量的作业、报告及教师指定的其它任务。3）多媒体课件与板书结合。应根据课程不同内容的特点进行选择。四、教学内容、要求及学时分配（一）理论教学(40学时)第一章面向对象语言概述（2学时）【目的与要求】：了解面向对象语言的基本符号;了解面向对象语言的词汇(保留字、标识符、常量、运算符、标点符号等);掌握面向对象程序的基本框架(结构程序设计框架、面向对象程序设计框架等)；能够使用集成开发环境编辑、编译、运行与调试程序。【难点与重点】：面向对象程序的基本框架，集成开发环境【教学建议】：探究式1.1面向对象程序的基本框架(结构程序设计框架、面向对象程序设计框架等)1.2集成开发环境编辑、编译、运行与调试程序【重点】：面向对象程序的基本框架【难点】：集成开发环境第二章基本数据类型（2学时）【目的与要求】：以类型概念为核心，介绍面向对象语言提供的基本数据类型以及与类型有关的基本概念，特别是类型与类型之间的关系。重点是掌握程序设计语言最基本的概念：数据类型、各类单词、表达式、运算符。【难点与重点】：程序设计语言最基本的概念、隐式类型转换【教学建议】：讨论式等1.1数据类型的基本概念1.2基本数据类型1.3运算符与表达式1.4类型之间关系【重点】：程序设计语言最基本的概念【难点】：隐式类型转换第三章基本控制结构（2学时）【目的与要求】：以结构化程序设计思想为指导介绍程序中的三种基本控制结构以及面向对象语言提供的基本控制语句。重点是掌握面向对象语言的选择语句与循环语句。【难点与重点】：面向对象语言的选择语句与循环语句、循环的控制【教学建议】：案例式1.1程序的基本控制结构1.2选择结构2181.3循环结构【重点】：面向对象语言的选择语句与循环语句【难点】：循环的控制第四章函数及引用（6学时）【目的与要求】：了解函数重载和内联函数；掌握const和动态存储分配的使用方法；理解引用。【难点与重点】：函数重载和引用【教学建议】：案例式第一节输入输出方式和函数（4学时）1.1面向对象的输入输出方式1.2函数重载及其使用方法1.3函数的默认参数及其使用方法1.4内联函数的作用【重点】：函数的参数传递【难点】：函数重载第二节const修饰符、动态存储和引用（2学时）2.1const修饰符的使用方法2.2动态存储分配的使用方法2.3引用及其使用方法【重点】：动态存储分配的使用方法【难点】：引用及其使用方法第五章类与对象（6学时）【目的与要求】：熟悉类和对象的定义与使用；理解构造函数与析构函数；掌握静态数据成员与静态成员函数的定义与使用方式；理解常数据成员与常成员函数；掌握This指针的使用；了解友元函数和友元类；了解对象数组与成员对象。【难点与重点】：类的定义方式、构造函数及友元函数【教学建议】：案例式第一节类和对象的定义（2学时）1.1类的定义方式、数据成员、成员函数及访问权限1.2对象和对象指针的定义与使用【重点】：类的定义方式【难点】：对象指针的定义与使用第二节类的成员（2学时）2.1构造函数与析构函数2192.2静态数据成员与静态成员函数的定义与使用方式2.3常数据成员与常成员函数2.4This指针的使用【重点】：构造函数与析构函数【难点】：静态数据成员与静态成员函数第三节友元函数、友元类和对象数组与成员对象（2学时）3.1友元函数和友元类3.2对象数组与成员对象【重点】：友元函数和友元类【难点】：对象数组第六章类的继承与派生（6学时）【目的与要求】：熟悉派生类的定义和访问权限；掌握继承基类的数据成员与成员函数；掌握基类指针与派生类指针的使用；理解虚基类。【难点与重点】：派生类的定义和访问权限、基类指针与派生类指针【教学建议】：案例式第一节派生类和基类（3学时）1.1派生类的定义和访问权限1.2继承基类的数据成员与成员函数【重点】：派生类的定义【难点】：访问权限第二节基类指针、派生类指针和虚基类（3学时）2.1基类指针与派生类指针的使用2.2虚基类【重点】：基类指针与派生类指针【难点】：虚基类第七章多态性（2学时）【目的与要求】：掌握虚函数机制；理解纯虚函数与抽象基类【难点与重点】：虚函数机制、纯虚函数【教学建议】：案例式1.1虚函数机制的要点1.2纯虚函数与抽象基类，虚函数【重点】：虚函数机制的要点【难点】：纯虚函数与抽象基类第八章运算符重载（4学时）【目的与要求】：理解运算符重载的概念；掌握运算符重载的用法；掌握特殊运算符的重220载。【难点与重点】：双单目运算符重载【教学建议】：案例式第一节运算符重载（2学时）1.1运算符重载的概念1.2运算符重载的用法【重点】：双目运算符重载【难点】：单目运算符重载第二节特殊运算符的重载（2学时）2.1特殊运算符的重载【重点】：特殊运算符的重载【难点】：特殊运算符重载运用第九章模版（4学时）【目的与要求】：理解函数模板的定义和使用方式；掌握类模板的定义和使用方式。【难点与重点】：函数模板的定义和类模版的使用【教学建议】：案例式第一节函数模板（2学时）1.1函数模板的定义1.2函数模板的使用方式【重点】：函数模板的定义【难点】：函数模板的使用方式第二节类模板（2学时）2.1类模板的定义2.2类模板的使用方式【重点】：类模板的定义【难点】：类模板的使用方式第十章输入输出流（4学时）【目的与要求】：掌握面向对象流的概念；能使用格式控制数据的输入输出；掌握文件的I/O操作。【难点与重点】：面向对象流、文件操作【教学建议】：案例式第一节面向对象流（2学时）1.1面向对象流的概念1.2使用格式控制数据的输入输出【重点】：面向对象流的概念【难点】：使用格式控制数据的输入输出第二节文件的I/O操作（2学时）2212.1文件的输入操作2.2文件的输出操作【重点】：文件操作概念【难点】：文件I/O操作过程第十一章异常的处理（2学时）【目的与要求】：理解异常处理的概念；掌握实现异常处理的方法；能进行异常处理综合应用。【难点与重点】：异常处理的方法【教学建议】：案例式1.1异常处理的概念1.2实现异常处理的方法【重点】：异常处理的概念【难点】：实现异常处理的方法（二）实验教学（20学时）目的和要求：掌握C++语言的基本语法规则；熟练掌握有关类与对象的相关知识；能够采用面向对象的编程思路和方法编写应用程序；能熟练使用VisualC++6.0集成开发环境编写和调度程序。项目名称1、必修实验项目序号项目编码1070132812070132823070132834070132845070132856070132867070132878070132889070132891007013290面向对象程序设计基础基于函数的模块化程序设计类的定义与对象的创建基于数组构造的程序设计基于指针构造的程序设计继承设计运算符重载动态多态性设计类属设计输入输出流设计