需求和设计之间的关系：模型转化、契约设计、不变式。
软件架构的概念和标准体系结构（如客户端－服务器、ｎ－层、转换为中
心、管道－过滤器）。
使用设计模式重构设计。
设计中对组件的使用：组件的选择、设计、组件的改造及组装、组件与模
式、组件与对象（例如，使用标准控件集建立一个图形用户界面）。
［选修］
内部设计质量及其模型：效率和性能、冗余和容错、需求可追溯性。
外部设计质量及其模型：功能性、可靠性、性能和效率、可用性、可维护
性、可移植性。
设计质量的度量与分析。
质量不同方面之间的权衡取舍。
应用程序框架。
中间件：中间件中的面向对象范例，对象请求代理和汇集，事务处理监控
器，工作流系统。
安全设计和编码原则（交叉参照ＩＡＳ／安全设计原理）。
最小特权原则。
默认故障安全原则。
心理可接受性原则。对适合于某一给定脚本的简单系统，讨论并选择一种合适的设计范例。
［运用］
６根据需求规格说明书，为软件产品的结构和行为建立适当的模型。［运
用］
７用适当的模型解释软件产品的需求和设计之间的关系。［评估］
８对于单一设计范例框架内一个简单的软件系统的设计，描述该系统的软
件架构。［熟悉］
９给定一个高层次的设计，通过鉴别常用的软件架构，如３－层、管道－过
滤器以及客户端－服务器，来识别该软件架构。［熟悉］
１０调查软件架构的选择对一个简单系统设计的影响。［评估］
１１将模式的简单例子应用于一个软件设计。［运用］
１２描述重构的一种形式，并讨论其可能适用于何时。［熟悉］
１３选择适当的组件，用于软件产品的设计中。［运用］
１４解释合适的组件可能需要做哪些适应性改变，以用于软件产品的设计
中。［熟悉］
１５为一个典型的小型软件组件设计一种契约，以用于一个给定的系统。
［运用］
［选修］
１６讨论并选择合适的软件架构，应用于适合某一给定脚本的简单系统。
［运用］
１７应用设计软件组件的内部和外部质量的模型，来达到各种冲突的质量
因素之间一种可接受的折衷。［运用］
１８从某种重要的内部质量属性的角度，分析一种软件设计。［评估］
１９从某种重要的外部质量属性的角度，分析一种软件设计。［评估］
２０解释对象在中间件系统中扮演的角色及其与组件之间的关系。［熟悉］
２１将面向组件的方法应用于某一范围内软件的设计，如将组件用于并发
和事务、用于可靠的通信服务、用于数据库交互，包括远程查询和数据库管理或
用于安全通信和访问。［运用］
１６８附录Ａ知识主体
２２重构一个现有的软件实现，以提高其设计的某些方面。［运用］
２３陈述并应用最小特权原则和默认故障安全原则。［熟悉］