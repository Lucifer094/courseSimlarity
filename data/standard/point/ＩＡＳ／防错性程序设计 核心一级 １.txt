输入验证和数据清洁（参见ＳＤＦ／开发方法／程序的正确性）。
选择编程语言和类型安全的语言。
８６附录Ａ知识主体
输入验证和数据清洁发生错误的例子（参见ＳＤＦ／开发方法／程序的正确
性和ＳＥ／软件构建／编码实践）。
缓冲区溢出。
整数的错误。
ＳＱＬ注入。
ＸＳＳ漏洞。
竞争条件下（参见ＳＦ／并行性／并行程序设计、ＰＤ／并行结构／共享和分布
式内存、ＰＤ／通信和协调／共享内存和ＰＤ／并行基础／串行程序设计中未发现的
编程错误）。
异常和意想不到的行为的正确处理（参见ＳＤＦ／开发方法／程序正确性）。
１解释为什么输入验证和数据清洁在输入通道的对抗性控制上是必要的。
［熟悉］
２解释为什么你会选择一种类型安全的语言来开发程序，如Ｊａｖａ，而不是
采用不安全的编程语言如Ｃ／Ｃ＋＋。［熟悉］
３常见的输入验证错误的分类，并写出正确的输入验证码。［运用］
４演示如何使用一个高层次的编程语言进行防止竞争条件的发生和如何
处理异常。［运用］
５演示如何识别并妥善地处理错误情况。［运用］
信息保障与安全（ＩｎｆｏｒｍａｔｉｏｎＡｓｓｕｒａｎｃｅａｎｄＳｅｃｕｒｉｔｙＩＡＳ）８７
