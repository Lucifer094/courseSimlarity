面向对象设计。
分解为带有状态与行为的对象
建模的类结构设计
定义类：域、方法和构造。
子类、继承，以及方法的重载。
动态调用：定义调用方法。
１设计并实现类。［运用］
２利用子类设计简单类结构使代码能够为不同子类重用。［运用］
３利用动态派遣方法对控制流进行正确分析。［运用］
４比较和对照：（１）过程／函数式程序设计方法（为每个操作定义一个函
程序设计语言（ＰｒｏｇｒａｍｍｉｎｇＬａｎｇｕａｇｅｓＰＬ）１４３
数，并且函数体为每个数据变量提供一个实例）；（２）面向对象方法（为每个数据
变量定义一个类，并且为每个操作定义一个方法）。通过定义关于矩阵的变量与
操作来理解上述两点。［评估］这部分内容也在ＰＬ／函数式程序设计中出现。
无副作用程序设计。
函数调用无副作用，可以促进复合式推理。
变量不可变，阻止其他代码对程序数据造成不可预知的修改。
数据可以自由地改名和复制，而不会导致其他未预期的效果。
函数中通过对每个数据的变化情况分别对待的方式来处理结构化数据
（如：树）。
关联的语言构造，如可识别联合类型（Ｕｎｉｏｎ）和在不同数据上的模式匹配。
围绕复合数据定义函数，以应用于处理他们的构成要素。
一阶函数（获取、返回、存储）。
１撰写基本算法，避免指派可变状态或考虑引用平等。［运用］
１４４附录Ａ知识主体
２撰写调用和返回其他函数的可用函数。［运用］
３比较和对照（１）过程／函数式编程方法（为每个操作定义一个函数，并且
函数体为每个数据变量提供一个实例）；（２）面向对象方法（为每个数据变量定
义一个类，并且为每个操作定义一个方法）。通过定义关于矩阵的变量与操作
来理解上述两点。［评估］（这部分内容也在ＰＬ／面向对象程序设计中出现。）
