验证与确认的概念。
检查、审查、审计。
测试类型，包括人机界面、可用性、可靠性、安全性、与规格说明一致性
（交叉参照ＩＡＳ／安全软件工程）。
测试基础（交叉参照ＳＤＦ／开发方法）。
单元、集成、验证以及系统测试。
测试计划的创建和测试用例生成。
黑盒和白盒测试技术。
回归测试和测试自动化。
缺陷跟踪。
测试在特定领域的局限性，如并行系统或安全攸关系统。
［选修］
验证的静态方法和动态方法。
测试驱动的开发。
计划确认，确认文档。
面向对象的测试，系统测试。
非代码资料（文档、帮助文件、培训资料）的验证和确认。
故障记录、故障跟踪和此类活动的技术支持。
故障估算和测试终止，包括缺陷播种。
学习成果：
［核心二级］
１区分程序的确认与验证。［熟悉］
１７０附录Ａ知识主体
２描述工具在软件确认中所扮演的角色。［熟悉］
３作为团队活动的一部分，承接一个中等规模代码段的检查。［运用］
４描述并区分不同类型和层次的测试（单元、集成、系统以及验收）。［熟
悉］
５描述识别用于集成、回归和系统测试的重要测试用例的技术。［熟悉］
６为一个中等规模的代码段创建并归档一组测试。［运用］
７描述如何选择好的回归测试以及如何自动化执行。［熟悉］
８在一个小规模软件项目中使用一种缺陷跟踪工具来管理软件缺陷。［运
用］
９讨论测试在某个特定领域的局限性。［熟悉］
［选修］
１０为一个中等规模的代码段评估一个测试套件。［运用］
１１比较静态和动态的验证方法。［熟悉］
１２指出测试驱动开发方法的基本原则，并解释自动化测试在这些方法中
扮演的角色。［熟悉］
１３讨论涉及面向对象软件的测试问题。［运用］
１４描述非代码资料的验证和确认技术。［熟悉］
１５描述故障估算方法。［熟悉］
１６基于故障密度和故障播种，估算一个小型软件应用中故障的数量。［运
用］
１７针对一个小型或中型的软件项目进行软件源代码检查或审查。［运用］