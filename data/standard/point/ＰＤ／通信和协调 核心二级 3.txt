消息传递。
点对点ｖｓ组播（或基于事件）的消息。
阻塞式ｖｓ非阻塞式的消息发送。
消息缓冲（交叉引用ＰＦ／核心数据结构／队列）。
原子性
１３４附录Ａ知识主体
定义和测试原子性及安全性需求。
原子访问和更新的粒度，如何使用诸如临界区、事务等来描述它们。
互斥机制，包括：锁、信号量、监控和其他构造方法。
■失去活性和死锁的可能性（原因、条件、预防措施）。
组合。
■使用同步来组成大粒度的原子访问。
■事务类型，包括：乐观或保守的方式。
［选修］
一致性。
循环阻碍、计数器和其他相关构造。
条件动作
条件等待（如使用条件变量）。给出一个例子，说明阻塞式消息发送可能会导致死锁。［使用］
４．解释何时和为什么组播或基于事件的消息传递比其他消息传递更好。
［熟悉］
５．设计一个程序，能够在一组并发任务完成后正确地停机。［使用］
６．使用正确同步的队列来缓冲活动传递的数据。［使用］
７．解释为什么要检查先决条件，并且这些条件必须共享相同的原子单元才
能有效。［熟悉］
８．设计一个测试程序展示并发编程的错误，例如，当两个并发活动都要增
加一个变量值的时候，其中的一次数据更新就会被遗漏。［使用］
９．描述至少一种设计技术，可以使用多个锁或者信号量来防止程序失去活
性。［熟悉］
１０．描述乐观和保守的并发控制在不同更新冲突率下的价值。［熟悉］
１１．给出一个例子，说明乐观性更新动作在某些情形下可能永远无法完成。