C语言程序设计是高等学校计算机、电气、电子、通信等专业重要的基础课程，也是理工科各相关专业的基础课程。C语言具有语言简洁、类型丰富、结构完整、表达力强、直接操作内存单元、适用于模块化结构等特点，因此C语言既具有高级语言的优点，又具有低级语言的许多特点。一旦掌握了C语言，就可以较为轻松地学习其他任何一种程序设计语言，为后续的面向对象程序设计语言、109数据结构，单片机原理及其应用、操作系统，编译原理、网络技术等课程打下基础。四、课程目标C语言程序设计是一种面向过程的通用程序设计语言，因此本课程不但注重程序设计语言基本知识的学习，更要注重程序设计技能的培养。本课程主要教授内容包括：程序设计基础、结构化程序设计方法（顺序、选择、循环）、数组和函数。具体课程目标包括：⚫通过本课程的学习，使学生熟练掌握一门典型的高级语言的语法与语义，掌握结构化设计的基本方法，掌握一些常见的程序设计技巧，掌握自顶向下逐步求精的程序设计技术，初步积累编程经验。⚫通过本课程的学习，更重要的是要学生掌握程序设计的思想和方法，培养学生语言的应用能力和问题的求解能力，培养学生良好的程序设计习惯和风格，增强团队协作精神，为后继课程以及今后从事软件开发打下坚实的基础。五、教学内容与进度安排*（满足对应课程标准的第2条）教学周次授课内容及重难点授课形式课外学习要求1授课内容：课堂教学4课时课后习题：第1章程序设计基础1.1数在计算机内的表示形式1.2程序设计和算法数制转换、码制作业C基础知识作1101.3程序设计语言业1.4C语言的字符集和标识符1.5C程序的基本结构和上机步骤重点及难点：1.掌握数制转换规则2.掌握数和字符在计算机内部的存储形式3.掌握C语言字符集和标识符。2授课内容：课堂教学4课时课后习题：第2章数据类型、运算符和表达数据类型作业式2.1常量和变量2.2基本数据类型2.3运算符和表达式2.4数据类型转换重点及难点：1.掌握C语言中常量和变量的定义2.掌握各种常用的数据类型定义、取值范围及使用（整型、实型、字符型）3.掌握常用运算符、数学公式转化111为C语言表达式的基本能力4.数据类型的强制转换3授课内容：课堂教学3课时课后习题：第3章结构化程序设计上机实验1课时顺序结构作业3.1结构化程序设计概述3.2输入输出函数、顺序结构举例上机实践（输入输出）重点及难点：1.数据的输入输出及输入输出中常用的控制格式2.上机实验熟练运用输入输出函数，熟悉顺序程序设计的语句结构4授课内容：课堂教学3课时课后习题：第3章结构化程序设计上机实验1课时分支结构作业3.3选择结构程序设计上机实践（顺序结构）重点及难点：1.关系运算符与关系表达式2.逻辑运算符与逻辑表达式3.条件运算符4.if语句5.switch与break语句的作用1125授课内容：课堂教学2课时课后习题：第3章结构化程序设计上机实验2课时循环结构作业3.4循环结构程序设计1上机实践（分支结构）重点及难点：1.了解程序设计中构成循环的方法2.掌握for、while、do-while语句的用法6授课内容：3.4循环嵌套、转移语句上机实践（循环结构）重点及难点：1.break、continue在循环语句中的作用。2.循环的嵌套和应用课堂教学2课时课后习题：上机实验2课时循环结构作业27授课内容：课堂教学4课时课后习题：第3章结构化程序设计3.4循环设计方法举例第4章数组4.1一维数组重点及难点：1.循环的应用2．一维数组的定义，初始化与引用一维数组作业11133.一维数组的应用8授课内容：第4章数组4.1一维数组举例上机实践（一维数组）重点及难点：1．一维数组举例及应用9授课内容：第4章数组4.2二维数组上机实践（一维数组）重点及难点：1．二维数组的定义，初始化与引用2．二维数组的应用10授课内容：第4章数组4.4字符数组和字符串上机实践（二维数组）重点及难点：1.字符数组的定义与引用2.常用字符串处理函数及字符处理函数课堂教学3课时课后习题：上机实验1课时一维数组作业2课堂教学3课时课后习题：上机实验1课时二维数组作业课堂教学3课时字符数组和字上机实验1课时符串作业114课堂教学3课时课后习题：上机实验1课时函数作业1课堂教学2课时课后习题：上机实验2课时函数作业211授课内容：第5章函数5.1概述5.2函数的定义5.3函数的调用上机实践（字符串）重点及难点：1．函数定义、函数调用、函数声明等基本概念2.形参和实参的区分3.数组元素作函数实参时的应用12授课内容：第5章函数5.4数组作为函数的参数5.5函数嵌套调用上机实践（函数定义与调用）重点及难点：1．数组名作为函数参数的应用2.函数嵌套调用