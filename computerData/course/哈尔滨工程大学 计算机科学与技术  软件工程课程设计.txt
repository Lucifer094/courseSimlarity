该课程设计主要训练学生采用工程的概念、原理、技术和方法开发和维护软件的能力。针对具体软件工程项目, 使学生进一步理解和掌握软件开发模型、软件生命周期、软件过程等理论在软件项目开发过程中的意义和作用，培养学生按照软件工程的原理、方法、技术、标准和规范，进行软件开发的能力。同时课程设计应充分体现“教师指导下的以学生为中心”的教学模式，以学生为认知主体，充分调动学生的积极性和能动性，重视学生自学能力的培养。三、教学基本要求通过该课程的教学，培养学生在软件设计过程中的分析问题与解决问题的能力，使之掌握开发高质量软件的原理和方法，有效地策划和管理软件开发活动的能力。基本要求如下：（1）可行性研究：确定“用户需要计算机解决的问题是什么”有没有解决方法，寻找一种技术上的可行性分析，并且在经济上有较高效益的可操作解决方案。（2）需求分析：准确地确定“目标系统必须做什么”，即软件系统必须具备哪些功能，并且将这些内容以《需求规格说明书》的形式准确地表达出来。（3）概要设计：该阶段必须回答的关键问题是“怎么做”，即应该怎样实现软件系统，主要任务是将需求转变为软件的表示形式。177（4）详细设计：该阶段的主要内容是理解“应该怎样具体地实现这个软件系统”，即将概要设计阶段得到的软件结构图用相应的详细设计工具表示出来。（5）编码阶段：按照选定的语言，把设计的每一个模式的过程性描述翻译为计算机可接受的源程序。（6）测试阶段：该阶段是保证软件质量的重要手段，可以按照不同的层次选择不同的测试方法。（7）运行阶段：主要工作是做好软件的维护。四、 教学内容与学时分配1可行性研究阶段（8学时）1.1确定系统的规模和目标。1.2着重从技术角度编写可行性研究报告。2 需求分析阶段（16学时）2.1需求获取，建立模型，包括业务流程图、实体联系图、用例图等。2.2需求描述，编写软件需求规格说明书。2.3需求验证。3概要设计阶段（8学时）3.1采用图形工具（软件结构图、层次图等）对软件系统进行功能分解，设计软件结构。3.2制定测试计划并复查。4详细设计阶段。（16学时）4.1为软件结构图中的每个模块确定采用的算法和块内数据结构。4.2选定的详细设计工具(程序流程图、时序图等)描述模块。5软件编码阶段（16学时）将详细设计阶段描述的信息翻译成某种程序设计语言书写的源程序。6软件测试阶段（8学时）对软件系统进行有针对性地测试，并撰写测试方案、测试用例和测试驱动程序等文档。7软件维护阶段（8学时）现有的系统进行相应的维护操作。278五、教学方法及手段（含现代化教学手段及研究性教学方法）本门课程采用学生动手实践方式来完成该教学环节的内容。通过开发一个小型应用系统，使学生掌握相关的技术和方法，并积累实践开发经验。六、实验（或）上机内容无七、前续课程、后续课程前续课程：面向对象程序设计、软件工程后续课程：毕业设计