（一）课程任务本课程是一门计算机专业的基础必修课程，也是工科学生学习和掌握计算机语言的入门课程。本课程的任务是引导学生以最自然的方式，将人类习惯的面向对象的思维方法运用到程序设计中。使学生学完本书之后能够解决一些简单的实际问题，并且为后续课程的学习打好基础。（二）课程目标本课程旨在通过课堂讲授及社会实践，让学生掌握c++语言中的数据类型，运算，语句结构及其程序设计的基本方法，了解面向对象程序设计的基本原理，包括抽象、封装、继承等关键要素以及其关键语法特性以及类。理论教学上达到学生能掌握c++各个知识点使用的语法以及编程的一般算法，培养学生的逻辑思维能力。实践上能让学生编写一些验证知识点的小程序，最后能基本独立完成一个简单的系统进行知识整合。三、教学内容和要求（一）理论教学的内容及要求53第一章绪论（1学时）了解面向对象程序设计语言的产生和特点，理解面向对象方法的由来和主要概念，掌握信息在计算机中的表示和存储过程以及程序的开发过程。第二章C++简单程序设计（1学时）理解C++语言历史及特点，掌握C++语句基本部分：字符集、关键字、标识符、操作符等。还有基本数据类型和自定义数据类型；以及算法的控制结构：顺序结构、选择结构和循环结构。第三章函数（3学时）通过学习函数是对处理问题过程的基本抽象单元，是对功能的抽象，要求学生熟练掌握各种函数的定义和使用方法。第四章类与对象（10学时）本章是重点章节，要求学生深入理解面向对象程序设计的基本思想及其主要特点：抽象、封装、继承和多态。熟练掌握类的定义、实现和如何利用类来解决问题。第五章数据的共享与保护（4学时）要求掌握标识符的作用域和可见性及变量、对象的生存期；使用局部变量、全局变量、类的数据成员、类的静态成员和友元来实现数据共享，共享数据的保护，以及使用多文件结构来组织和编写程序，解决较为复杂的问题。第六章数组、指针与字符串（2学时）本章讨论数组、指针与字符串。重点掌握如何通过使用数组和指针解决数据、函数以及对象之间的联系和协调。对于字符串及其处理相关的string类，要会熟练使用。第七章继承与派生（10学时）本章讲述类的继承特性。要求学生掌握不同继承方式下的基类成员的访问控制问题、添加构造函数和析构函数问题，了解在较为复杂的继承关系中，类成员的唯一标识和访问问题。第八章多态性（10学时）本章讲述类的第三大特性—多态性。多态是指同样的消息被不同类型的对象接收时导致完全不同的行为，是对类的特定成员函数的再抽象。要求学生掌握其多态的概念，并深入了解重载（包括函数重载和运算符重载）和虚函数的异同。了解绑定的原理。第九章群体类和群体数据的组织（2学时）群体是指由多个数据元素组成的集合体。通过学习了解群体分为线性群体和非线性群体两种，学会群体的组织问题—排序和查找方法。54第十章泛型程序设计与C++标准模板库（4学时）学习STL中涉及的一些概念、术语，以及它的结构，主要的组件的使用方法。重点了解容器、迭代器、算法和函数对象的基本应用。第十一章流类库与输入输出（4学时）了解流的概念，在这基础上理解流类库的结构和使用。第十二章异常处理（3学时）讲述异常处理问题。掌握对所能预料的运行错误进行处理的一套实现机制，try，throw和catch语句就是C++中处理异常的机制。（二）实践教学的内容及要求1.函数编程练习掌握函数的声明、定义方法，理解函数参数的传递，掌握函数调用的方法，写出实验报告。2.类与对象编程练习掌握类的定义，根据具体需求设计类，深入理解类的封装性，会根据类创建各种对象。写出实验报告。3.数据的共享与保护的编程练习掌握标识符的作用域与可见性，了解对象的生存周期与类的静态成员，会用友元方式实现某些功能，写出实验报告4.数组、指针与字符串的编程练习练习指针的使用，掌握string类的使用方法，写出实验报告。5.继承与派生的编程练习掌握派生与继承的概念与使用方法，运用继承机制对现有的类进行重用。掌握继承中的构造函数与析构函数的调用顺序，为派生类设计合适的构造函数初始化派生类。写出实验报告。6.多态性的编程练习理解多态性的概念。掌握如何用虚函数实现动态联编，掌握如何利用虚基类。写出实验报告。7.类模板编程练习理解类模板的概念，掌握类模板的定义、实例化过程，掌握类模板的运用，进一步理解代码重用的思想，写出实验报告。558.输入/输出流的编程练习理解输入/输出流的概念，熟悉工作过程，写出实验报告。