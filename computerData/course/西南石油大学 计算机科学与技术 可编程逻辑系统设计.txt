时间：2016年3月本课程是一门运用EDA技术和VHDL语言,分析和解决在可编程器件上实现数字系统的问题，是计算机科学与技术专业的一门专业任选课程。377本课程的目的是培养学生有关可编程逻辑系统设计的基本思想和基本方法，并使学生受到必要的可编程逻辑系统设计训练。本课程的任务是让学生了解数字系统设计的基本理论；掌握组合逻辑模块、时序逻辑模块及复杂时序系统的设计方法；培养学生以EDA技术和VHDL语言进行可编程逻辑系统自主设计的能力；增强学生分析和解决工程实际问题的能力。三、基本要求1、课程支撑能力1）掌握数字系统设计基础理论和方法，能针对特定硬件模块或系统问题需求进行分析。2）能针对特定需求完成计算机硬件系统或相关模块的建模和设计，具有数字系统设计能力。3）能熟练运用各种硬件设备及相关工具，完成数字系统的开发与验证。4）具有系统应用能力，能将系统应用于社会生活解决实际问题，并进行一定的创新尝试。2、课程教学目标26)理解常用数字系统设计的基本思路、思考方法、适用场合以及设计中考虑的各种因素，能分析具体的设计任务，选择合适的设计方法并建立顶层设计模型。27)掌握全新的数字系统设计技术和FPGA开发技术，掌握组合逻辑模块、时序逻辑模块及复杂时序系统的设计方法，熟练运用自上而下的设计方法完成可编程逻辑系统的设计。28)掌握QuartusII等EDA工具的使用方法和VHDL语言的编程方法，学会行为仿真、时序仿真和硬件测试技术。29)灵活将理论学习与实践设计紧密结合，通过实验与实践项目，提高自主设计和实践创新能力。3、达成途径17)以能力培养为导向，注重理解可编程逻辑系统设计的基本思想和基本方法、并能应用于解决实际问题。18)采用“案例式”理论教学方法，从具体器件或者系统的设计需求出发，通过案例讲解与剖析，引导学生完成可编程系统设计流程。19)采用“项目式”实验教学手段，通过课题开放式讨论、多层次实验设计以及专题讲座等，培养学生的调研分析、系统设计和工程实践能力。20)采用“多角度”课程考核方法，加大实验和课题设计在总成绩中所占比例，突出工程实践能力和创新设计能力的培养。四、教学内容、要求及学时分配（一）理论教学(28学时)第六十章基础知识（4学时）【目的与要求】：明确学习本课程的必要性、重要性；认识可编程器件及可编程系统的正确概念，了解可编程逻辑器件的工作机理、面向FPGA的EDA开发流程和开发环境，建立自顶向下的设计理念。378【重点难点】：可编程逻辑设计的EDA技术【教学建议】：教师可采用探究式的教学方法第一节可编程逻辑系统简介（2学时）1.11了解数字系统的设计方法1.12了解数字系统的实现方法1.13掌握PROM、PLA、PAL、GAL、CPLD、FPGA的工作机理1.14了解Altera典型PLD产品【重点】：PLD的工作机理【难点】：LUT的逻辑结构第二节可编程逻辑设计的EDA技术（2学时）2.1了解EDA的主要任务、描述手段、应用对象、设计方法2.2掌握EDA开发流程2.3掌握AlteraQuartusII使用方法【重点】：EDA的开发流程、QuartusII使用方法【难点】：自顶向下的设计方法第二章VHDL入门（4学时）【目的与要求】：了解VHDL入门知识，掌握VHDL语言的基本语法，掌握VHDL程序结构体的三种描述风格，了解测试基准及其用途。【难点与重点】：VHDL的结构体描述风格【教学建议】：探究式、案例式第一节VHDL简介（1学时）1.11.2了解VHDL的历史与特点掌握VHDL设计的基本要素1.3掌握第一个VHDL例子【重点】：VHDL的基本语法【难点】：VHDL基本程序设计思想第二节VHDL结构体的描述风格与程序结构（1学时）2.1掌握VHDL结构体三种描述风格2.2掌握VHDL程序结构2.3掌握类属语句2.4了解配置2.5掌握库与程序包【重点】：VHDL的程序结构、三类描述风格【难点】：三类描述风格的区别、结构描述的实现第三章组合逻辑电路的VHDL设计（6学时）379【目的与要求】：培养多值逻辑的概念，理解信号与变量的差别，熟练掌握常用组合逻辑电路的VHDL程序设计。【难点与重点】：组合逻辑模块的设计方法【教学建议】：案例式、讨论式第一节三态缓冲器和译码器（2学时）1.11.21.31.4理解多值逻辑掌握三态缓冲器的VHDL实现掌握三态总线的VHDL实现掌握2:4译码器的实现1.5掌握带三态使能的译码器实现1.6掌握n:2n译码器的实现【重点：多值逻辑的意义】【难点：n位译码器的算法设计】第二节多路选择器和优先权编码器（2学时）2.1掌握常规结构的4:1多路选择器2.2掌握带三态特性的4:1多路选择器2.3掌握优先权编码器基于真值表的模型2.4掌握优先权编码器顺序（行为）描述的模型【重点：多路选择器的设计】【难点：优先权比较器中的“-”值处理】第三节加法器与奇偶校验器（2学时）3.1掌握网表描述的4位加法器3.2掌握数据流描述的n位加法器3.3掌握基于网表的n位行波加法器3.4掌握顺序描述的偶校验模型【重点：信号与变量，循环的实现】【难点：Generate语句的运用】第四章同步时序的VHDL设计（10学时）【目的与要求】：建立状态机的概念，熟练掌握状态机的ASM图或状态转移图设计方法，熟练掌握常见时序逻辑电路的VHDL程序设计。【难点与重点】：同步时序模块的设计方法【教学建议】：案例式、讨论式第一节时序逻辑模块的设计（2学时）1.1掌握基本RS触发器1.2掌握锁存器与D触发器3801.3掌握移位寄存器1.4掌握计数器【重点】：常见时序逻辑模块的VHDL设计【难点】：计数器的设计第二节同步时序系统（2学时）2.1了解同步时序逻辑概述2.2掌握简单同步时序系统举例【重点】：异步系统与同步系统【难点】：同步时序系统第三节算法状态机ASM设计方法（2学时）3.1了解算法状态机概述3.2掌握用ASM方法设计交通信号灯控制器3.3掌握状态编码3.4理解状态最小化3.5掌握实例：3倍序列检测器、饮料自动售货机【重点】：ASM算法状态机设计思想【难点】：ASM算法状态机设计，状态最小化第四节状态机的VHDL实现（2学时）4.1掌握交通灯控制器的VHDL实现4.2了解一般有限状态机的组成4.3掌握一般状态机描述4.4掌握举例：AD574控制器【重点】：状态机的2进程模型，AD574控制器的设计思想【难点】：AD574的状态转换图第五节同步时序设计实例（2学时）5.1掌握举例：存储器5.2掌握举例：移位相加乘法器【重点】：SRAM存储器的VHDL设计【难点】：移位相加乘法器的设计第五章深入VHDL设计（4学时）【目的与要求】：了解同步数字系统设计的一般技巧，了解VHDL的综合分类，理解程序设计对综合结果的影响，掌握典型数字系统的设计方法。【难点与重点】：同步数字系统设计技巧【教学建议】：探究式、案例式第一节同步数字系统设计技巧（2学时）3811.1了解同步设计的优点1.2掌握时钟控制1.3了解同步设计的一般原则【重点】：同步设计的一般原则【难点】：同步设计中的时钟控制第二节简单微处理器设计（2学时）2.1了解简单微处理器的原理2.2掌握简单微处理器的顶层原理图2.3掌握简单微处理器的ASM设计方法2.4掌握简单微处理器的实现【重点】：复杂系统的状态机划分方法【难点】：简单微处理器的ASM图设计（二）实验教学（20学时）目的和要求：熟悉本课程相关的研究方法，掌握本课程有关可编程逻辑系统设计的基本操作方式方法，完成组合逻辑模块设计、时序模块设计和复杂时序系统设计方面的实验内容，分析、解释实验结果，形成结论并提出建议，达到能解决数字系统设计中实际问题的能力，进一步提高实验技能。13、必修实验项目序号项目编码4807010034QuartusⅡ软件安装与熟悉4907010035加法器设计5007010036译码器设计5107010037计数器设计5207010038交通灯信号控制器设计5307010039ADC控制器设计5407010040乘法器设计14、选修实验项目序号项目编码2607010041多路选择器设计2707010042数控分频器设计2807010043序列检测器设计2907010044等精度测量频率计设计3007010045正弦信号发生器设计3107010046简单微处理器设计项目名称项目名称382