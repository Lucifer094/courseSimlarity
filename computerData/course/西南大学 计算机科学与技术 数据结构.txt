结构（线性表、栈、队列、串、树、图等）以及它们在计算机内的存储形式和与这些数据结构相关的运算、算法、应用。通过本课程的学习，使学生熟悉各类数据对象的特点，熟悉各种基本数据结构的定义及其分类、数据结构与数据类型的关系、数据结构与算法的关系；理解数据的逻辑结构和物理结构的基本概念以及实现基本操作的各种基本算法；了解设计算法及分析算法的基本方法；掌握常用数据结构和基本存储结构（顺序存储结构，链式存储结构）的特点及计算机实现；学会根据实际问题的要求，选用并设计数据结构及有关算法；掌握数据结构在排序和查找等常用算法中的应用；了解递归的概念、递归算法的设计及应用；掌握初步的分析与评价算法复杂度的能力。通过本课程的学习，还可以进一步培养良好的程序设计习惯与综合程序设计能力，为操作系统、编译原理、数据库原理与应用和算法分析与设计等后续课程的学习打下基础。选用教材：《数据结构（C语言版）》,严蔚敏、吴伟民编著，清华大学出版社，2007年参考书目：1．数据结构习题集（第二版），严蔚敏、吴伟民编著，清华大学出版社，2002年。66本科理论课程教学大纲（2014版）2．FundamentalsofDataStructures,E.HorowitzandS.Sahni,byPitumenPublishingLimited,1976。一、课程教育目标通过本课程的学习，学会分析研究计算机加工的数据对象的特性，以便选择适当的数据结构和存储结构以及相应的算法，并初步掌握算法的时间分析和空间分析的技巧。本课程的先修课有《C语言程序设计》和《离散数学》，前者为《数据结构》课程提供描述和实践工具；后者从理论上讨论了树、图等模型，而《数据结构》则着重介绍这些模型在计算机内部的表示及运算的实现。《数据库原理及应用》是本课程的后续课程，课程中介绍的文件组织以及排序、查找算法都是《数据库原理及应用》所涉及的。《算法分析与设计》也是本课程的后续课程，它是在本课程涉及到的一些基本算法分析方法的基础上，更深入地介绍算法设计与分析的有关问题。在教学方法上，以知识点作为讲授单元，这样便于前后课程的联系。三、课程学时分配章内容学时第一章绪论第二章线性表第三章栈和队列第四章串第五章数组和广义表第六章树第七章图第九章查找第十章排序四、课程教学内容、要求、重难点及学时安排第一章绪论（一）讲授内容：1、数据结构的定义及主要内容。4126461212882、给出数据、数据元素、数据项、数据对象、数据结构、逻辑结构、物理结构、元素、结点、数据类型、抽象数据类型等基本概念的确切含义。3、了解数据结构的发展简史及在计算机科学中的地位。67本科理论课程教学大纲（2014版）4、算法的含义及设计要求，算法时间和空间复杂度的定义与分析。（二）教学要求：1、熟悉数据结构用到的一些基本术语、名词的含义，掌握基本概念，特别是数据的逻辑结构和存储结构之间的关系，分清哪些是逻辑结构的性质，哪些是物理结构的性质。了解数据结构的发展简史及其在计算机科学与技术专业学习课程中的地位，了解数据结构与算法的关系。2、了解抽象数据类型的定义、表示和实现方法。3、理解算法五个要素（特性）的确切含义。4、掌握计算语句频度和估算算法时间复杂度的方法以及算法分析中O(f(n))符号的含义。5、熟悉一种算法描述语言（类PASCAL或C）的书写规范，特别要注意值参和变参的区别，输入、输出的方法以及错误处理方式。（三）教学重点：数据结构的概念；算法分析。（四）学时分配：建议本章共讲授4学时。（一）讲授内容：第二章线性表1、线性表的逻辑结构定义、抽象数据类型定义和各种存储结构的描述方法。2、顺序存储线性表的实现和运算，有关算法的复杂度分析。3、链式存储线性表（静态链表和动态链表）、带有附加表头结点和不带附加表头结点的单链表、循环链表及双向链表的建立、查找、插入、删除等基本操作的实现和有关算法复杂度的分析。4、链表应用举例----一元多项式的表示及相加的算法，链表在动态存储管理中的应用。(二)教学要求：1、了解线性表的逻辑结构特性（数据元素之间存在着线性关系），在计算机中表示线性表数据元素关系的两种方法：顺序存储结构和链式存储结构，以及由两种关系表示得到的顺序表、链表。2、熟练掌握这两种存储结构的描述方法。3、熟练掌握线性表在顺序存储结构上的各种基本操作：查找、插入和删除68的算法。本科理论课程教学大纲（2014版）4、熟练掌握在各种链表结构中实现线性表操作的基本方法，能在实际应用中选用适当的链表结构。了解静态链表的定义及实现方法。5、能够从时间和空间复杂度的角度综合比较线性表两种存储结构的不同特点、各种操作的算法复杂度分析及其适用场合。（三）教学重点：线性表的基本概念、顺序表的实现及应用；单链表、循环链表以及双向链表的定义、实现及应用。（四）教学难点：实现链表删除与插入操作时指针的变化以及特殊情况处理。（五）学时分配：建议本章共讲授12学时。（一）讲授内容：第三章栈和队列1、栈的定义、基本操作和两种存储结构上基本操作的实现算法。2、栈的应用举例----表达式求值的过程。3、递归算法执行过程中栈的状态变化过程。4、队列的定义、基本操作、链队列和循环队列的主要运算实现。5、队列的应用举例----离散事件模拟。（二）教学要求：1、掌握栈和队列的定义及其抽象数据类型的特点，并在相应的应用问题中正确选用之。2、熟练掌握栈类型、顺序栈和链栈两种实现方法、基本操作实现算法，特别注意栈满和栈空的条件以及它们的描述方法。3、熟练掌握循环队列和链队列的基本操作实现算法，特别注意队满和队空的描述方法。4、了解递归的概念、递归算法的应用和栈在递归算法执行过程中的作用。（三）教学重点：栈与队列的操作实现及表达式求值的方法。（四）教学难点：栈与队列的操作实现及表达式求值的方法；递归解决问题的思想。69本科理论课程教学大纲（2014版）（五）学时分配：建议本章共讲授6学时。（一）讲授内容：第四章串1、串的数据类型定义，空串、空格串、主串、子串等基本概念，串的七种基本操作的定义和实现串的其它的操作方法。2、串的三种存储表示：定长顺序存储结构、块链存储结构和堆分配存储结构。3、串的各种基本操作的实现。4、串的应用举例。（二）教学要求：1、熟悉串的有关概念以及串的基本操作的定义。2、熟练掌握在串的定长顺序存储结构上实现串的各种操作的方法。3、掌握串的堆存储结构以及在其上实现串操作的基本方法。4、了解串操作的应用方法和特点，了解字符串的模式匹配。（三）教学重点：字符串操作的实现。（四）教学难点：字符串的模式匹配。（五）学时分配：建议本章共讲授4学时。第五章数组与广义表（一）讲授内容：1、数组的类型定义和表示方式。2、数组的顺序存储结构。3、特殊矩阵和稀疏矩阵的压缩存储方法、三元组表及十字链表的运算实现。4、广义表的逻辑结构、存储结构、表示和基本操作的定义。（二）教学要求：1、了解数组的逻辑定义和两种存储表示方法，并掌握数组在以行为主的存储结构中的地址计算方法。2、掌握对特殊矩阵进行压缩存储时的下标变换公式。70本科理论课程教学大纲（2014版）3、了解稀疏矩阵的两种压缩存储方法的特点和适用范围，理解三元组的表示方法及进行矩阵运算采用的处理方法。4、掌握广义表的结构特点及其存储表示方法。（三）教学重点：特殊矩阵和稀疏矩阵的压缩存储方法；三元组表的表示方法；广义表的定义和存储。（四）教学难点：稀疏矩阵十字链表表示方法。（五）学时分配：建议本章共讲授6学时。第六章树与二叉树（一）讲授内容：1、树的基本概念，树的表示，集合的树表示与运算。2、二叉树、完全二叉树、满二叉树的定义与表示，二叉树的性质、二叉树的存储结构（顺序表示法和二叉链表表示法）及运算。3、二叉树遍历的递归算法及使用栈的非递归算法。线索二叉树的定义、存储及算法。4、树和森林定义、术语，树的存储表示法---孩子表示法、双亲表示法、孩子兄弟表示法，与二叉树的转换、遍历。5、树的路径长度、树的带权路径长度、哈夫曼树的构造方法。（二）教学要求：1、熟练掌握二叉树的结构特性，了解相应的证明方法，熟悉各种存储结构的特点及适用范围。2、熟练掌握遍历二叉树的各种策略的递归和非递归算法，了解遍历过程中“栈”的作用和状态，灵活运用遍历算法实现二叉树的其他操作。3、理解二叉树线索化的实质，熟练掌握二叉树的线索化过程以及在中序线索化树上找给定结点的前趋和后继的方法。4、熟悉树的各种存储结构及其特点，掌握树和森林与二叉树的转换方法。学会编写实现树的各种操作的算法。5、了解最优二叉树的特性，掌握建立最优二叉树和哈夫曼编码的方法。（三）教学重点：71二叉树的表示；存储实现以及操作；最优二叉树的构造算法。本科理论课程教学大纲（2014版）（四）教学难点：二叉树的线索化过程。（五）学时分配：建议本章共讲授12学时。第七章图（一）讲授内容：1、图的定义和基本术语：图、无向图、有向图、网、子图、连通图、强连通图；顶点的级、度、入度、出度；顶点间的路径、路径长度、环。2、图的四种存储结构：邻接矩阵（数组表示），邻接表（含逆向邻接表），十字链表，邻接多重表。3、图的两种遍历策略：深度优先搜索遍历图的算法及其时间复杂度；广度优先搜索遍历图的算法及其时间复杂度。4、图的连通性问题：连通分量、生成树、最小生成树的概念。最小生成树的算法（PRIM算法和KRUSKAL算法）及其时间复杂度。5、拓扑排序和关键路径：AOV网和拓扑排序的定义，拓扑排序序列获取算法及实现。AOE网和关键路径的定义，关键路径的求取。6、最短路径：求源点到其余各顶点间的最短路径。DIJKSTRA算法的思想及其时间复杂度。求各顶点对之间的最短路径。FLOYED算法的思想及其时间复杂度。（二）教学要求：1、熟悉图的定义和基本术语，图的各种存储结构及其构造算法，了解实际问题的求解效率与采用何种存储结构和算法有密切联系。2、熟练掌握图的两种搜索路径的遍历：遍历的逻辑定义、深度优先搜索算法（递归与非递归）和广度优先搜索算法及各自采用的数据结构。3、掌握求最小生成树的PRIM算法和KRUSKAL算法。4、掌握AOV网与AOE网和关键路径的定义、拓扑排序算法和关键路径的求取方法。5、掌握源点到其余各顶点间的最短路径的DIJKSTRA算法及各顶点对之间最短路径的FLOYED算法的算法思想。（三）教学重点：72图的存储；图的遍历；构造图的最小生成树的方法；拓扑排序算法；最短路本科理论课程教学大纲（2014版）径算法；关键路径算法。（四）教学难点：求图的连通分量；构造最小生成树算法；求解最短路径问题的DIJKSTRA算法和FLOYED算法。（五）学时分配：建议本章共讲授12学时。（一）讲授内容：第九章查找1、查找的定义、查找表（静态查找表、动态查找表）。查找、平均查找长度。静态查找表：顺序表、顺序查找的实现方法、查找算法及其效率（最坏和平均长度）；有序表、折半查找的实现方法、查找算法及其效率（最坏和平均长度）；索引顺序表、分块查找的实现方法、查找算法及其效率（最坏和平均长度）。2、动态查找表：动态查找表、树表、二叉排序树和B-树、B+树和键树；二叉排序树的定义与建立二叉排序树的算法，二叉排序树上插入和删除结点的算法实现及其效率分析；二叉排序树的查找分析，平衡二叉树的定义、特点和平衡方法，二叉平衡树（AVL树）的定义、平衡因子计算、维护平衡的方法。B-树、B+树和键树的定义、建树及查找运算。3、哈希表：哈希表的定义、特点，哈希表的查找、哈希函数和散列地址。构造哈希函数的几种方法：直接定地址法、除留余数法、平方取中法、折叠法、数字分析法。冲突产生原因，处理冲突的方法：开放定址法（线性探测再散列、二次探测再散列和伪随机探测再散列）和链地址法。查找过程的判定树、查找效率、平均查找长度讨论。（二）教学要求：1、熟练掌握顺序表和有序表的查找方法，并能灵活运用。2、熟悉静态查找表的构造方法和查找算法。3、掌握二叉排序树的概念及建立、插入和删除结点的算法及对二叉排序树的查找分析。掌握二叉平衡树的维护平衡方法。4、理解B-树、B+树和键树的特点以及他们的建树过程。5、熟练掌握哈希表的构造方法，理解哈希表与其它结构的表的实质性的差73本科理论课程教学大纲（2014版）别。6、掌握描述查找过程的判定树的构造方法，以及按定义计算各种查找方法在等概率情况下查找成功时的平均查找长度。（三）教学重点：基于有序顺序表的顺序查找、折半查找和分块查找；AVL树、B树、哈希表等一系列查找、建立方法及性能分析。（四）教学难点：动态查找表；B+、B-、键树的查找过程。（五）学时分配：建议本章共讲授8学时。第十章内部排序（一）讲授内容：1、排序的目的、排序方法的分类和排序方法的稳定性。2、插入排序的基本思想、算法特点，直接插入排序、折半插入排序、链表插入排序、希尔排序的排序过程及算法的时间复杂度分析。3、交换排序的基本思想、算法特点，起泡排序、快速排序的排序过程、算法实现及算法的时间复杂度分析和稳定性。4、选择排序的基本思想、算法特点，简单选择排序、树形选择排序（锦标赛排序）的排序过程及算法的时间复杂度分析，堆排序的方法、堆的定义、初始堆的求取和堆排序过程及算法的时间复杂度分析。5、归并排序的基本思想、算法特点，归并排序的排序过程及递归和递推算法的时间复杂度分析与稳定性。6、基数排序的基本思想及特点，链式基数排序的排序过程及算法的时间复杂度分析。7、各种内部排序方法的比较讨论。（二）教学要求：1、理解排序的定义和各种排序方法的特点。2、了解各种方法的排序过程及其依据的原则，以“关键字之间的比较”为基础按排序过程所依据的原则将内部排序方法分为五类：插入排序、交换排序、选择排序、归并排序、计数排序，重点掌握直接插入排序、折半插入排序等简单排序算法和希尔排序、快速排序、堆排序、归并排序等高效排74本科理论课程教学大纲（2014版）序算法。3、理解排序方法“稳定”和“不稳定”的含义。（三）教学重点：各种排序算法及性能分析。（四）教学难点：快速排序；基数排序。（五）学时分配：建议本章共讲授8学时。