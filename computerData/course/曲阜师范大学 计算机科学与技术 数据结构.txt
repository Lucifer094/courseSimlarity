（一）课程任务本课程是计算机科学与技术、网络工程专业的专业基础必修课程，是后续专业方向课程特别是软件方面课程的基础课程，它系统地介绍线性表、栈、队列、字符串、数组、广义表、树、二叉树、图、查找表等常用数据结构的基本概念、操作及其典型应用例子。本课程的任务是：在知识方面，要求学生掌握常用数据结构的基本概念及其不同的实现方法，使学生了解数据对象的特性，数据组织的基本方法；在技能方面，通过系统学习能够在不同存储结构上实现不同的运算，并对算法设计的方式和技巧有所体会。通过学习，初步具备分析问题、解决问题的能力，养成良好的程序设计风格，积聚和提高基本的分析设计能力，为后续课程的学习打下坚实的基础。（二）课程目标本课程的主要目标是使学生深入了解数据结构的逻辑思想和实现方法，和应用技术。本课程追求理论联系实际，教学与实践相呼应。灵活多样地采取了编程、拓展性学习、案例教学、讨论、报告，大型作业，科研项目等多种形式，激发学生的学习兴趣和主动参与精神，126使学生理解原理，掌握方法，熟练应用，能够创造性地应用各种数据结构和算法设计性能优，效率高，可读性强，易维护的程序，解决实际问题，提高学生的学习能力，探索研究的能力。在学完本课程之后，学生能够：1.掌握数据结构的基本概念、基本原理和基本方法；2.掌握数据的逻辑结构、存储结构及基本操作的实现，能够对算法进行基本的时间复杂度和空间复杂度的分析；3.运用数据结构的基本原理和方法进行问题的分析与求解，具备采用C或C++语言设计与实现算法的能力。三、教学内容和要求（一）理论教学的内容及要求第1章概论介绍数据结构中常用的基本概念和术语以及学习数据结构的意义，要求了解各种基本概念和术语，掌握算法描述和分析的方法。了解数据结构的逻辑结构、存储结构及数据的运算三方面的要领及相互关系。算法复杂度的分析方法。1.数据、数据元素、数据项、数据结构等基本概念。数据结构的逻辑结构、存储结构及数据运算的含义及其相互关系。数据的两大类逻辑结构和四种常用的存储表示方法。2.数据结构在各种软件系统中所起的作用。选择合适的数据是解决应用问题的关键步骤。3.算法、算法的时间复杂度和空间复杂度、最坏的和平均的时间复杂度等概念。算法的时间复杂度不仅仅依赖于问题的规模，也取决于输入实例的初始状态。算法描述和算法分析的方法，对于一般算法能分析出时间复杂度。第2章线性表介绍线性表的逻辑结构和各种存储表示方法，以及定义在逻辑结构上的各种基本运算及其在存储结构上如何实现这些基本运算。要求在熟悉这些内容的基础上，能够针对具体应用问题的要求和性质，选择合适的存诸结构设计出相应的有效算法，解决与线性表相关的实际问题。熟练掌握顺序表和单链表上实现的各种基本算法及相关的时间性能分析，能够使用本章所学到的基本知识设计有效算法解决与线性表相关的应用问题。1.线性表的逻辑结构特征，线性表上定义的基本运算，并能利用基本运算构造出较复杂的运算。2.顺序表的含义及特点，即顺序表如何反映线性表中元素之间的逻辑关系。顺序表上的插入删除操作及其平均时间性能分析。利用顺序表设计算法解决简单的应用问题。1273.链表如何表示线性表中元素之间的逻辑关系。链表中头指针和头结点的使用。单链表、双链表、循环链表链接方式上的区别。单链表上实现的建表、查找、插入和删除等基本算法，并分析其时间复杂度。循环链表上尾指针取代头指针的作用，以及单循环链表上的算法与单链表上相应算法的异同点。双链表的定义及其相关的算法。利用链表设计算法解决简单的应用问题。4.顺序表和链表的主要优缺点。针对线性表上所需要执行的主要操作，知道选择顺序表还是链表作为其存储结构才能取得较优的时空性能。第3章栈和队列介绍栈和队列的逻辑结构定义及在两种存储结构上如何实现栈和队列的基本运算。要求在掌握栈和队列的特点的基础上，懂得在什么样的情况下能够使用栈或队列。掌握栈和队列在两种存储结构上实现的基本运算，循环队列中对边界条件的处理。1.栈的逻辑结构特点，栈与线性表的异同。顺序栈和链栈上实现的进栈、退栈等基本算法。栈的"上溢"和"下溢"的概念及其判别条件。利用栈设计算法解决简单的应用问题。2.队列的逻辑结构特点，队列与线性表的异同。顺序队列（主要是循环队列）和链队列上实现的入队、出队等基本算法。队列的"上溢"和"下溢"的概念及其判别条件。使用数组实现的循环队列取代普通的顺序队列的原因。循环队列中对边界条件的处理方法。利用队列设计算法解决简单的应用问题。3.栈和队列的特点，什么样的情况下能够使用栈或队列。第4章字符串和多维数组了解串的逻辑结构、存储结构及其串上的基本运算，掌握串上实现的模式匹配算法。了解多维数组的逻辑结构特征及其存储方式，掌握特殊矩阵和稀疏矩阵的压缩存储方法1.串的有关概念及基本运算。串与线性表的关系。2.串的两种存储表示。串上实现的模式匹配算法及其时间性能分析。使用C语言提供的串操作函数构造与串相关的算法解决简单的应用问题。3.多维数组的逻辑结构特征。多维数组的顺序存储结构及地址计算方式。数组是一种随机存取结构的原因。4.特殊矩阵和稀疏矩阵的概念。特殊矩阵和压缩存储时的下标变换方法。稀疏矩阵的三元组表表示方法及有关算法。第5章树和二叉树介绍二叉树的定义、性质、存储结构、遍历、线索化、树的定义、存储结构、遍历、树128和森林与二叉树的转换，哈夫曼树及哈夫曼编码等内容。要求在熟悉这些内容的基础上，掌握二叉树的遍历算法及其有关应用，使用本章所学到的有关知识设计出有效算法，解决与树或二叉树相关的应用问题。1.树的逻辑结构特征。树的不同表示方法。树的常用术语及含义。2.二叉树的递归定义及树与二叉树的差别。二叉树的性质，了解相应的证明方法。二叉树的两种存储方法、特点及适用范围。3.二叉树的三种遍历算法，理解其执行过程。确定三种遍历所得到的相应的结点访问序列。以遍历算法为基础，设计有关算法解决简单的应用问题。4.二叉树线索化的目的及实质。在中序线索树中查找给定结点的中序前趋和中序后继的方法。查找给定结点的前趋和后序后继并非有效的原因。5.树和森林与二叉树之间的转换方法。树的各种存储结构及其特点。树的两种遍历方法。6.最优二叉树和最优前缀码的概念及特点。哈夫曼算法的思想。根据给定的叶结点及其权值构造出相应的最优二叉树。根据最优二叉树构造对应的哈夫曼编码。第6章图介绍图的基本概念、两种常用的存储结构、两种遍历算法以及图的应用算法，要求学生在熟悉这些内容的基础上，掌握在图的两种存储结构上实现的遍历算法。图的应用算法：求最小生成树，求最短路径以及拓扑排序，只要求学生掌握这些算法的基本思想及时间性能。1.图的逻辑结构特征。图的常用术语及含义。2.邻接矩阵和邻接表这两种存储结构的特点及适用范围。根据应用问题的特点和要求选择合适的存储结构。3.连通图及非连通图的深度优先搜索和广度优先搜索两种遍历算法，其执行过程以及时间分析。4.生成树的最小生成树的概念。对遍历给定的图，画出深度优先和广度优先生成树或生成森林。Prim和Kruskal算法的基本思想、时间性能及这两种算法各自的特点。要求对给定的连通图，根据Prim和Kruskal算法构造出最小生成树。5.最短路径的含义。求单源最短路径的Dijkstra算法的基本思想和时间性能。对于给定的有向图，根据Dijkstra算法画出求单源最短路径的过程示意图。6.拓扑排序的基本思想和步骤。拓扑排序不成功的原因。对给定的有向图，若拓扑序列存在，则要求写出一个或多个拓扑序列。第7章查找129介绍线性表、树和散列表的查找方法、算法实现以及各种查找方法的时间性能（平均查找长度）分析。要求学生在熟悉这些内容的基础上，掌握顺序查找、二分查找，二叉查找树上查找以及散列表上查找的基本思想和算法实现。二叉查找树的删除算法及B-树上的插入和删除算法。1.查找在数据处理中的重要性。查找算法效率的评判标准。2.顺序查找、二分查找的基本思想、算法实现和查找效率分析。顺序查找中哨兵的作用。二分查找对存储结构及关键字的要求。通过比较线性表上两种查找方法的优缺点，能根据实际问题的要求和特点，选择出合适的查找方法。3.树表的查找思想、算法实现和查找效率分析，理解二叉排序树和平衡二叉树的定义和特点以及用途。掌握二叉排序树的插入、删除、建树和查找性能分析。4.散列表、散列函数、散列地址和装填因子等有关概念。散列函数的选取原则及产生冲突的原因。几种常用的散列函数构造方法。两类解决冲突的方法及其优缺点。产生"堆积"现象的原因。采用线性控测法和拉链法解决冲突时，散列表的建表方法、查找过程以及算法实现和时间分析。散列表和其它表的本质区别。第8章排序介绍五类内部排序方法的基本思想、排序过程、算法实现、时间和空间性能的分析以及各种排序方法的比较和选择。要求在熟悉这些内容的基础上，掌握快速排序、堆排序、归并排序和基数排序的基本思想及排序过程，以及这四个排序算法的实现。1.排序在数据处理中的重要性。排序方法的"稳定"性含义。排序方法的分类及算法好坏的评判标准。2.直接插入排序中的基本思想和算法实现，以及在最好、最坏和平均情况下的时间性能分析。直接插入排序中哨兵的作用。针对给定的输入实例，要能写出直接插入排序的排序过程。3.冒泡排序的基本思想。快速排序的基本思想和算法实现，以及在最坏和平均情况下的时间性能分析，了解算法的稳定性。基准元素（划分元）对划分是否平衡的影响。针对给定的输入实例，能写出快速排序的排序过程。4.堆、小根椎、大根堆、堆顶等有关概念和定义。堆性质及堆与完全二叉树的关系。直接选择排序和堆排序的基本思想和算法实现，以及时间性能分析。针对给定的输入实例，写出堆排序的排序过程。5.归并排序的基本思想和算法实现，以及时间性能分析。针对给定的输入实例，能写出130归并排序的排序过程。6.通过对被排序的记录数目、记录信息量的大小、关键字的结构及初始状态、稳定性要求、辅助空间的大小、各种时间性能等方面的比较掌握各种排序的优缺点。根据实际问题的特点和要求选择合适的排序方法。第9章索引技术介绍索引的基本概念以及线性索引技术和树形索引技术，要求对这些内容做一般性的了解。1.了解索引的基本概念。2.理解线性索引技术3.掌握树形索引技术，B-树和B+树的定义和特点以及用途。B-树的插入、删除、建树和查找算法及时间性能。（二）实践教学的内容及要求1．线性表的验证实验了解集成化的实验环境，理解顺序表的定义和单链表的定义，掌握线性表的单链表的实现方法。2．约瑟夫环问题掌握用循环链表实现约瑟夫环问题的算法3.栈和队列的验证实验掌握顺序栈（链栈）的定义及实现算法。掌握顺序队列（链队列）的定义及实现算法。4.二叉树的验证掌握二叉树的定义及实现算法5.求二叉树中叶子结点的个数掌握建立一棵二叉树并求该二叉树中叶子结点的个数的算法。6.图的验证掌握用邻接矩阵表示图的方法。掌握用邻接表表示图的方法。7.二叉排序树掌握用二叉链表实现二叉排序树的建立和遍历的算法8.各种排序算法的比较131设计并实现至少三种排序算法，比较算法的时间性能