一）课程的性质、地位、作用和任务《软件设计与体系结构》是计算机软件工程专业选修课程，主要研究结构良好的软件体系结构及所包含的设计模式、有价值的经验和针对特定问题的解决方案，能培养和提高学生的洞察力和分析能力，为今后能设计出灵活可复用的软件打下基础。本课程的主要任务是掌握软件体系结构相关知识、原理和各种类型设计模式的基本结构，对软件体系结构有比较深入的理解，能够从系统结构角度分析现有的软件系统，在设计实际的特定问题是懂得运用具体相关的设计模式，并能利用所学到的有关软件体系结构的知识高效地设计软件系统。（二）教学目的和要求本课程介绍软件体系结构的基本概念和基本原理，明确提出软件体系结构的动态性和适应性的理念，通过学习本课程使学生了解当今优秀编程人员如何灵活运用面向对象的技术进行可复用程序设计，同时使他们对面向对象技术和原理有更加深刻的认识理解，并能使用这些设计模式于实际的应用当中，另外还可以培养学生具有分析和解决问题的基本思路，以及面向对象程序设计中的可复用的思想，为日后从事大型复杂软件开发打下良好的基础。（三）课程教学方法与手段采用理论与案例讨论相结合的教学方法，手段拟采用PowerPoint多媒体教学及分组讨论。（四）课程与其它课程的联系《面向对象程序设计》是本课程的先修课，通过该课程掌握面向对象方法与技术的基本概念、特点和原理，并能运用该技术设计简单的面向对象系统，是本课程的基础。同时，本课程与《软件工程》等相关专业课程有密切联系。（五）教材与教学参考书教材：张春祥等编《软件体系结构理论与实践》，中国电力出版社，2011参考书：[1]AlanShalloway、JamesR.Trott著、熊节译，《设计模式精解》，清华大学出版社，2005.1[2]ErichGamma等著、李英军等译，《设计模式——可复用面向对象软件的基础》，机械工业出版社，2004.9二、课程的教学内容、重点和难点本课程有两个主要部分：一、介绍常用的体系结构风格，软件体系结构的组成与常用的描述方法，基于体系结构的软件开发方法；二、实际设计模式的分类描述，主要包括:创建型、结构型和行为型3类共23个设计模式。（一）软件体系结构概论1．软件复用2．软件构件的组织与检索3．软件构件化4．软件体系结构重点难点：1．软件构件化2．软件体系结构（难点）（二）软件体系结构建模1．软件体系结构模型2．软件体系结构的形式化描述3．软件体系结构的生命周期4．软件体系结构的建模语言5．基于软件体系结构的开发重点难点：1．软件体系结构的生命周期2．软件体系结构的建模语言3．基于软件体系结构的开发（难点）（三）软件体系结构风格1．软件体系结构风格概述2．常用的软件体系结构风格3．管道／过滤器体系结构风格4．事件驱动体系结构风格5．分层体系结构风格6．C2体系结构风格7．数据共享体系结构风格8．解释器体系结构风格9．软件体系结构风格概述10．反馈控制环体系结构风格11．客户机／服务器体系结构风格12．浏览器／服务器体系结构风格13．公共对象请求代理体系结构风格14．正交体系结构风格15．基于层次消息总线的体系结构风格16．MVC体系结构风格重点难点：1．客户机／服务器体系结构风格2．浏览器／服务器体系结构风格3．MVC体系结构风格（难点）（四）设计模式概述1．什么是设计模式2．SmalltalkMVC中的设计模式3．描述设计模式4．设计模式的编目5．组织编目6．设计模式怎样解决设计问题7．怎样选择设计模式8．怎样使用设计模式重点难点：1．什么是设计模式2．设计模式怎样解决设计问题（难点）3．怎样选择设计模式（难点）4．怎样使用设计模式（难点）（五）创建型设计模式内容：1．AbstractFactory（抽象工厂）2．Builder（生成器）3.FactoryMethod（工厂方法）4．Prototype（原型）5．Singleton（单件）重点难点：1．AbstractFactory（抽象工厂）（难点）2.FactoryMethod（工厂方法）（难点）（六）结构型设计模式内容：1．Adapter（适配器）2．Bridge（桥接）3．Composite（组成）4．Decorator（装饰）5．FACADE（外观）6．Flyweight（享元）7．Proxy（代理）重点难点：1．Adapter（适配器）（难点）2．Bridge（桥接）（难点）3．Composite（组成）4．Flyweight（享元）（七）行为型设计模式内容：1．CHAINOFRESPONSIBILITY（职责链）2．COMMAND（命令）3．INTERPRETER（解释器）4．ITERATOR（迭代器）5．MEDIATOR（中介者）6．MEMENTO（备忘录）7．OBSERVER（观察者）8．STATE（状态）9．STRATEGY（策略）10．TEMPLATEMETHOD（模板方法）11．VISITOR（访问者）重点难点：1．CHAINOFRESPONSIBILITY（职责链）2．COMMAND（命令）3．OBSERVER（观察者）（难点）4．STRATEGY（策略）（难点）5．TEMPLATEMETHOD（模板方法）（难点）