《软件工程》是计算机科学与技术专业的专业限选课程。它是在具有一定程序设计语言的基础上，系统学习软件开发过程的原理、方法与技术的一门综合性很强的专业基础课。本课程重点讲授软件工程的原理、方法与应用。课程内容的理论性、技术性、实践性都比较强，因此，传授软件工程原理、方法与技术的同时，应注重设计技能与实践能力的训练。本课程的教学宗旨和目标是：从软件工程的基本原理与方法着手，对软件工程过程的各个步骤进行讲解，包括详细的概括与分析、先进的设计、开发技术与管理方法，对软件生存期的整个过程进行控制和管理。让学生全面理解软件作为一种产品，在开发的各个阶段都是受控制的，必须将软件工程的思想贯穿开发过程的始终，以保证软件产品的质量和可靠性。为今后从事软件项目工作与科研开发打下坚实的基础。二、教学基本要求通过本课程的学习，应使学生达到以下要求：1）理解软件与软件工程的概念，了解软件工程产生的主要原因及发展方向；2）掌握软件工程的基本原理、方法与应用技术；3）熟练掌握传统软件工程过程和软件生存期模型；4）熟练掌握可行性研究与需求分析阶段的主要方法与技术；1205）理解软件设计的目的与任务。熟练掌握软件设计过程的主要方法与技术，包括结构化设计方法及详细设计描述的工具等；6）掌握编码时应遵循的原则、程序设计的风格及语言的基本特点；7）理解软件测试的目的，掌握软件测试的过程与方法、策略等，包括测试的对象、基本步骤及测试常用的方法；8）理解软件维护的概念及可维护性的定义，掌握软件维护活动的过程及提高可维护性的方法；9）掌握面向对象技术的软件工程过程；10）掌握软件项目管理与质量保证的过程；11）了解软件工程标准化的要求与相关知识。教学方法主要采用课堂教学或多媒体教学手段，并与实际案例相结合。根据各章节内容的特点因材施教，将启发式教学贯穿始终。教材编选依据实用性、系统性原则。本课程理论抽象性较强，要求教师在教学过程中要充分重视理论与实践的紧密结合，重点讲解软件工程的基本原理、设计方法与实践应用。要把软件工程的原理与其他课程相联系，如与程序设计语言相结合，培养学生系统的、科学的软件设计思想。三、教学内容及学时分配第一章软件工程概述（2学时）教学要求：了解软件的特点，软件生产发展的三个阶段，各阶段的特点，软件危机的产生及其表现形式；初步了解软件的生存周期模型；理解软件工程的定义及特点，软件生存期各阶段的特点和内容；深刻理解软件危机产生的原因；掌握软件生命周期中各阶段的基本任务。教学重点：软件危机的产生表现、原因；软件工程的定义；软件生存周期概念。教学难点：软件的生存周期模型。第二章可行性研究（2学时）121教学要求：深刻理解可行性研究的必要性；掌握可行性研究的任务及可行性研究的具体步骤；了解系统流程图的作用及符号表示；掌握数据流图的画法及数据字典的编写。教学重点：可行性研究的任务及步骤，数据流图的画法及数据字典的编写。教学难点：数据流图的画法。第三章需求分析（4学时）教学要求：深刻理解需要分析阶段的概念及任务；熟练掌握数据流图的细化方法；掌握常用图形工具的使用方法。教学重点：需求分析过程，各种图形工具的应用。教学难点：需求分析过程。第四章总体设计（4学时）教学要求：了解总体设计的过程；深刻理解软件总体设计的基本任务，软件设计的基本原理；理解模块化，抽象，信息隐蔽，模块独立性等概念，明确度量模块独立性的校准---耦合性及内聚性；熟练掌握结构化设计方法，能划分数据流的类型，将其能换成软件结构图，并能根据优化准则将其优化。教学重点：将交换流和事务流类型的数据流图，转换成软件结构；将一个复杂型数据流图转换成软件结构图并优化。教学难点：面向数据流的设计方法。第五章详细设计（2学时）教学要求：明确详细设计阶段的主要任务，掌握算法复杂性的度量方法；能熟练的使用详细设计描述工具来设计模块中的算法及程序的逻辑结构；学会使用McCabe方法进行程序复杂程度的定量度量。教学重点：流程图、PAD图、过程设计语言的简单应用；程序复杂程度的定量度量。教学难点：程序复杂程度的定量度量。122第六章软件测试（4学时）教学要求：了解几种常见的程序设计语言的特点；领会程序设计中应注意的问题，注意培养良好的编程风格。掌握测试阶段的内容，测试方法及测试步骤；深刻理解测试过程中单元测试，集成测试，验收测试的任务及使用的方法；深刻理解白盒，黑盒测试技术；能针对某一问题采用白盒法或黑盒法进行测试用例的设计；掌握调试程序的方法。教学重点：白盒与黑盒测试方法；单元测试，集成测试的方法；自顶向下及自底向上结合模块的步骤；渐增式及非渐增式测试的区别；归纳法与演绎法调试策略；测试用例的设计。教学难点：白盒与黑盒测试方法；测试用例的设计。第七章软件维护（2学时）教学要求：了解软件维护的各种困难，软件维护的特点，软件维护的文档；理解软件维护的内容，维护任务的实施。深刻理解如何提高软件的维护性。教学重点：领会改正性维护、适应性维护、完善性维护、预防性维护；可维性的定义、可维性的度量及提高可维护性的方法。教学难点：可维性的度量及提高可维护性的方法。第八章面向对象的方法学（2学时）教学要求：深刻理解对象、类、类的层次结构、方法和消息的实质以及对象之间的关系；深刻理解面向对象程序设计的特性；深刻理解面向对象建模的概念。教学重点：对象之间的关系；面向对象建模的概念。教学难点：对象模型、动态模型和功能模型的概念理解。第九章面向对象分析（2学时）教学要求：理解对象分析的基本过程；深刻理解对象模型、动态模型、功能模型的元素、结构和构造方法；掌握画对象图、画状态图、画数据流程图；确定对象类、确定关联、确定属性，识别继承。123教学重点：建立对象模型、动态模型、功能模型。画对象图、画状态图、画数据流程图。教学难点：建立对象模型、动态模型和功能模型的方法。第十章面向对象设计（2学时）教学要求：掌握面向对象设计的准则；掌握面向对象设计所用启发性规则、软件重用、系统分解等方法；了解设计问题域、人机交互、管理等子系统；设计优化。教学重点：面向对象设计所用启发性规则、软件重用、系统分解。教学难点：设计问题域、人机交互、管理等子系统。第十一章面向对象实现（2学时）教学要求：了解面向对象的程序设计语言和程序设计风格；了解面向对象测试。教学重点：面向对象程序设计风格，面向对象测试。教学难点：面向对象测试。第十二章软件项目管理（4学时）教学要求：了解软件开发成本结算；了解软件项目进度安排；了解软件项目计划内容；了解软件质量的定义、质量保证的基本概念。教学重点：软件开发成本结算、软件项目进度安排、软件项目计划内容。教学难点：软件开发成本结算、软件项目进度安排、项目计划控制。