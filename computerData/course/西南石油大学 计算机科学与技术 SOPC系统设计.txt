时间：2016年3月本课程是一门运用SOPC（可编程片上系统）技术和系统设计思想，分析和解决电子工程中数字系统设计问题，是计算机科学与技术专业的一门专业任选课程。本课程的目的是培养学生有关SOPC系统设计的基本思想和基本方法，并使学生受到必要的SOPC系统开发训练。本课程的任务是让学生了解SOPC系统设计的基本理论和最新设计理念；掌握NIOSII的体系结构、SOPC系统软硬件开发流程；培养学生在SOPCbuilder和NIOSII环境下进行SOPC系统开发的能力，并鼓励创新；增强学生分析和解决工程实际问题的能力。三、基本要求1、课程支撑能力1）硬件相关问题分析：能运用专业原理和方法，针对特定硬件模块或系统问题需求进行分析，建立相关计算模型，并验证其有效性。2）硬件设计与实现：能针对特定需求完成计算机硬件系统或相关模块的设计与实现。3）创新意识与创新精神：具有跟踪新知识、新技术的基本素养，能够体现创新意识和创新精神，并进行一定的创新尝试。4)硬件相关工具使用：熟练使用硬件设备及相关工具，理解其适用场合和局限性，能应用于复杂应用系统开发。2、课程教学目标30)理解常用数字系统设计的基本思路、思考方法、适用场合以及设计中考虑的各种因素，能综合运用系统设计思想分析和解决实际工程问题。31)掌握全新的数字系统设计技术和SOPC开发技术，掌握NIOS的体系结构和相关外设，熟练运用SOPCBuilder完成SOPC硬件系统的集成。32)掌握NIOSII等开发环境和仿真环境的使用方法，掌握NIOS工程的开发流程，学会NIOS384外设编程、自定义指令和Micro/OSII操作系统的编程。33)灵活将理论学习与实践设计紧密结合，通过实验与实践项目，提高自主设计和实践创新能力。3、达成途径21)以能力培养为导向，注重理解SOPC系统设计的基本思想和基本方法、并能应用于解决实际问题。22)采用“Learningbydoing”的教学方法，多媒体和板书结合的授课方式，通过案例导向进行启发式教学，引导学生完成SOPC设计流程。23)采用“项目驱动”的实验教学手段，以项目开发流程和方法为主线，通过课题开放式讨论、多层次实验设计等，培养学生的调研分析、系统设计和工程实践能力。24)采用“多角度”课程考核方法，加大实验和课题设计在总成绩中所占比例，突出工程实践能力和创新设计能力的培养。四、教学内容、要求及学时分配（一）理论教学(28学时)第六十一章SOPC系统概述（2学时）【目的与要求】：了解掌握SOPC系统基本概念，SOPC系统的软硬件特点，重点掌握在嵌入式系统的众多处理器中，SOPC系统的特点，Nios软核和其他硬核处理器的异同。【重点】：SOPC系统的特点【难点】：Nios软核与其他硬核处理器的异同【教学建议】：教师可采取探究式教学方法1.理解SOPC系统的定义及特点2.理解SOPC系统的硬件特点3.理解SOPC系统软件的特点4.掌握SOPC系统与普通嵌入式系统的异同第六十二章SOPC设计初步（4学时）【目的与要求】：掌握SOPC的开发工具与技术，掌握QuartusII9.0、SOPCBuilder、NiosIIIDE的特点及使用方法。熟练掌握SOPC应用开发流程。包括交叉编译、下载、调试。理解SOPC模拟器的原理【难点与重点】：SOPC系统软硬件开发流程【教学建议】：教师可采取案例式教学方法第一节NIOS软核概述（2学时）1.1理解Nios软核CPU的特点、结构1.2掌握Nios嵌入式系统开发流程和方法【重点】：了解NIOS的基本结构功能385【难点】：理解NIOS的软硬件调试流程第二节Nios软核开发实例（2学时）2.1理解Nios系统设计实例2.2掌握Nios硬件系统开发流程2.3掌握Nios系统软件开发流程【重点】：掌握Nios的完整设计流程【难点】：掌握Nios的软件开发调试技术第六十三章Nios外设及其编程技术（6学时）【目的与要求】：理解常用Nios外设（UART、PIO、timer、片上RAM、SRAM和Flash）的结构。掌握Nios外设使用方法，包括如何在SOPC系统中加入外设以及如何编写控制程序控制这些外设。【难点与重点】：Nios外设结构和编程方法【教学建议】：教师可采用案例式教学方法第一节并行输入/输出口（2学时）1.1理解PIO寄存器1.2掌握PIO口编程：LED、数码管、按键【重点】：理解PIO口结构【难点】：掌握PIO编程方法第二节定时器（2学时）2.1理解定时器寄存器2.2掌握定时器软件编程【重点】：理解定时器结构【难点】：掌握定时器编程方法第三节异步串口UART（2学时）3.1了解UART内核功能3.2理解UART寄存器3.3掌握UART软件编程【重点】：理解UART结构【难点】：掌握UART软件编程第六十四章Nios体系结构(6学时)【目的与要求】：理解Nios“软核”CPU的体系结构、理解Avalon总线的传输类型和时序、掌握自定制Avalon外设的技术和方法。【难点与重点】：Nios中断的编程和控制【教学建议】：教师可采用探究式、案例式教学方法第一节Nios体系结构（4学时）3861.1了解Nios处理器结构1.2理解Nios寄存器文件1.3理解存储器和I/O组织1.4理解寻址方式【重点】：理解Nios寄存器文件【难点】：理解各寄存器的作用第二节Avalon总线规范（2学时）2.1了解Avalon总线基本概念2.2理解Avalon总线信号2.3理解从端口传输时序2.4理解主端口传输时序【重点】：理解Avalon总线信号【难点】：理解Avalon总线传输时序第六十五章Nios高级开发技术（4学时）【目的与要求】：理解Nios自定义外设的硬件结构、掌握如何将自定义外设添加到Nios系统，掌握自定义外设编程技术【难点与重点】：用户自定制指令和外设的实现方法教学建议：教师可采用案例式教学方法第一节用户自定制指令（2学时）1.1掌握自定制指令的基本步骤1.2掌握自定制指令的适用方法【重点】：掌握自定制指令的实现方法【难点】：掌握自定制指令的软件接口第二节用户自定制外设（2学时）2.1掌握Nios自定义外设的基本步骤2.2掌握Nios自定义外设编程方法【重点】：掌握Nios自定义指令实现方法【难点】：掌握Nios自定义指令的硬件设计第六十六章Micro/OS-II基础（4学时）【目的与要求】：理解Micro/OS-II设备驱动的线程、理解Micro/OS-II任务管理和时间管理、理解Micro/OS-II信号量和互斥量【难点与重点】：Micro/OS-II的多任务管理和资源竞争【教学建议】：教师可采用探究式教学方法第一节Micro/OS-II操作系统基础（2学时）1.1了解Micro/OS-II嵌入式操作系统基础3871.2理解Micro/OS-II任务管理和时间管理【重点】：了解Micro/OS-II基本概念【难点】：理解Micro/OS-II任务调度基本原理第二节Micro/OS-II多任务开发（2学时）2.1理解Micro/OS-II信号量和互斥量2.2理解Micro/OS-II消息队列和邮箱【重点】：掌握Micro/OS-II任务管理和多任务的程序设计【难点】：理解Micro/OS-II下复杂任务调度第六十七章SOPC系统开发综合实例（2学时）【目的与要求】：通过一个具体的案例，对嵌入式软件开发的流程进行详细回顾，进一步深化对嵌入式软件开发的理解。【难点与重点】：综合运用系统设计方法解决工程问题【教学建议】：教师可采用案例式教学方法1.理解频率测量常用方法原理及误差分析2.理解等精度测频原理3.掌握等精度测量频率计设计流程4.掌握等精度测量频率计仿真结果分析【重点】：理解等精度测频原理【难点】：掌握等精度测量频率计实现过程（二）实验教学（20学时）目的和要求：熟悉本课程相关的研究方法，掌握本课程有关SOPC系统的设计方法，完成Nios外设，用户自定制外设，Micro/OSII操作系统和SOPC系统综合设计等方面的实验内容，分析、解释实验结果，形成结论并提出建议，达到能解决SOPC系统设计中实际问题的能力，进一步提高实验技能。15、必修实验项目序号项目编码项目名称555657585960616207010047一个简单的SOPC系统07010048PIO端口输入输出控制程序设计07010049串口收发程序设计07010050键盘中断程序设计07010051用户自定制外设07010052基于SOPC的uCOSII操作系统07010053嵌入式操作系统下多任务开发07010054基于SOPC的嵌入式系统综合设计