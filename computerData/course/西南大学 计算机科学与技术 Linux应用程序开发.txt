《linux应用程序开发》是本专业的一门专业发展课程（选修课）。它是一门集计算机技术、软件、硬件、应用和开发为一体的重要课程。主要讲授Linux操作系统的工作原理、讲解系统命令的功能、C程序开发流程、相关硬件接口开发原理等知识。通过对本课程的学习，使学生掌握Linux操作系统中应用程序开发的基本概念和基本原理；掌握Linux接口开发的构建及应用技术。基本内容：要求在本课程学习过程中，学生要能实现利用各种Liunx支撑技术的应用程序实例，包含掌握的技术内容如下：(1).信号驱动(2).字符编程处理(3).管道输入输出(4).资源管理(5).图形图像应用编程(6).线程管理技术、进程间通信212本科理论课程教学大纲（2014版）(7).动态链接库(8).多媒体编程（对课程的性质、任务、地位、作用、基本内容等作出简要说明）选用教材：《Unix-Linux编程实践教程》，BruceMolay著，杨宗源等译，清华大学出版社，2004年，第1版参考书目：1．《Linux程序设计第四版》，NeilMatthew,RichardStones主编，WileyPublicshing,Inc.二、课程教育目标理论和知识方面：学生通过本课程的学习，应能熟练掌握Linux系统入门、应用程序开发、操作系统定制与裁剪、系统结构分析、驱动程序开发、内核级开发等软件开发过程中所涉及到的主要技术和方法；对不断变化的程序开发技术，以及嵌入式开发技术，具有跟踪、继续学习的基础与能力。1、Linux系统应用：Shell命令、Shell程序开发2、Linux内核开发:Unix/Linux文件服务，IO，内存管理，进程，IPC，线程，线程同步掌握Unix/Linux下的基本的开发技术，了解Linux内核原理3、Linux网络开发：Linux下Socket编程，掌握Linux下网络编程技术，能开发网络通信应用与网络安全应用软件。4、阶段项目：网络爬虫：简易搜索引擎的实现通过完成简单应用软件的编码，掌握基本的应用软件开发能力，掌握程序的分析设计思路。能力和技能方面：由于Linux程序开发涉及知识范围广，新技术也不断出现，因此本课程在强调基本概念、基本原理、基本应用技术和硬件体系架构的基础上，还应加强理论联系实际，突出各项技术的实用性。1．掌握常用Linux软件开发工具的使用：如vi，Gdb等，在程序调试时，能利用现有的软件工具去分析、发现和解决问题。2．深入理解Linux系统用户、文件操作的基本思想和技术，掌握Linux的文件操作函数：Open、read等的使用，能利用高级语言实现缓冲，内核模式、用户模213式的编程，并在自己的软件中加以利用。本科理论课程教学大纲（2014版）3.掌握Linux系统中目录与文件属性的操作技巧，如读取目录的内容，位操作及掩码的使用，linux树状文件系统的概念。4．掌握连接控制以及用户终端控制和信号的配置与管理方法。5．掌握事件驱动编程原理和方法，以及网络编程的基本原理。三、课程学时分配章内容学时第一章Linux系统概述4第二章Shell命令4第三章Shell程序设计6第四章Linux内核以及系统定制2第五章GNUC开发环境2第六章链接控制：tty设备编程6第七章事件驱动编程6第八章Linux网络编程6四、课程教学内容、要求、重难点及学时安排例：第一章Linux系统概述【教学内容】（列举本章节主要教学内容）1．Linux简介2．Linux的安装，发行版本的选择；基本的硬件要求；安装步骤3．Linux系统的常用命令，了解Shell，进入Shell命令行界面；文件操作命令；目录及其操作命令；文件压缩命令4．Unix的产生与发展【教学要求】1．了解Linux操作系统的基本功能、了解系统编程的原理；2．了解Linux操作系统的历史、现状和特点，3．学会Linux系统的安装过程，4．理解Linux图形环境的概念和组成【重点、难点】1．重点：Linux操作系统的特点和安装，计算机系统包含的资源管理方法214本科理论课程教学大纲（2014版）2．难点：一些Linux的系统功能是由多个程序的协作完成，编写系统程序，必须对系统调用和相关的数据结构有深入理解。【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】4学时第二章Linux系统命令【教学内容】1．Shell命令概述2．目录和文件操作3．用户和用户组管理4．文件的权限管理5．进程管理6．inux的备份与恢复7．Linux应用软件包管理8．输入输出重定向和管道9．元字符与正则表达式【教学要求】1．了解安全使用Linux系统的方式2．能够输入正确的命令并完成简单的任务3．理解文件、目录、文件系统、进程等概念4．掌握具体的命令，对文件、目录、进程和软盘进行管理；并学会使用Linux环境下的系统帮助解决操作问题【重点、难点】1．重点：掌握具体的操作命令来管理硬盘和软盘上的资源2．难点：各种命令参数的合理运用【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】4学时【教学内容】第三章Shell程序设计1.Shell概述：Shell的概念是源自Unix的命令解释器。Shell不仅可解释用户输入的命令，同时，可解释执行基于命令的脚本语言。2.Shell脚本的定义与执行215本科理论课程教学大纲（2014版）3.Shell变量：变量的分类包括：用户自定义变量；环境变量；位置变量；预定义变量4.输入和输出5.Shell中的引号6.条件表达式7.控制语句8.函数【教学要求】1.了解shell的主要特点、类型、建立和执行的方式2.理解bash变量的分类、定义形式及引用规则3.掌握各种控制语句的格式、功能和流程4.弄清楚bash中算术运算的使用5.学会bash函数的构成、使用规则，以及bash中的内置命令【重点、难点】1．重点：bash变量的分类、定义形式及引用规则；bash函数的构成、使用规则2．难点：函数构成，应用规则【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】6学时第四章Linux内核以及系统定制【教学内容】（列举本章节主要教学内容）1．磁盘管理：硬盘的第一扇区称为主引导记录（MBR），长度为512字节，MBR的格式；Linux系统中的分区的命名2．引导加载程序grub(GrandUnifiedBootloader)，Linux发行版中常用的引导加载程序，GRUB引导配置3．Linux内核定制，包括定制Linux内核的过程4．Linux应用环境的初始化，init进程，inittab的语法结构【教学要求】1．了解Linux内核的一般结构2.理解进程的概念、进程的调度和进程通信3.掌握文件系统的构成和管理216本科理论课程教学大纲（2014版）4.理解内存管理5．掌握设备驱动和中断处理【重点、难点】1．重点：进程的概念、调度和通信，设备驱动和中断处理2．难点：linux系统定制的方法和流程【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】2学时【教学内容】（列举本章节主要教学内容）第五章GNUC开发环境1．GNUC编译器2．项目管理工具:GNUmake3．创建和使用函数库4．GNUC函数库:glibc【教学要求】本章在介绍GCC(GNUCompilerCollection)编译器的相关功能，包括以下特点：(1)支持多种高级语言(2)支持多种硬件处理器(3)支持多种操作系统平台。以及数据库连接的方法。要求学生：1．GCC的应用方法；2．了解MakeFile的原理和应用方法以及类型与特点；3．了解创建和使用动态、静态连接库基本概念以及调用方法；4．掌握常用的GNUC函数库：glibc。【重点、难点】1．重点：GCC的调用方法，MakeFile编程和定制技术，动态链接库技术，静态链接库技术，glibc数据库的使用方法。2．难点：MakeFile的定制，动态链接库技术，glibc数据库。【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】2学时第六章链接控制：tty设备编程【教学内容】（列举本章节主要教学内容）1．设备编程2．设备和系统调用3．设备文件的属性和设置方法217本科理论课程教学大纲（2014版）4．设备与文件的不同之处，以及磁盘连接的属性【教学要求】，本章在将学习设备与目录和文军的相似之处和不同之处，并了解如何将这些特点用于管理设备间的连接。要求学生：1．了解文件和设备间的相似与不同之处；2．掌握设备连接的属性3．掌握竞争和原子操作的特点和编程技巧4．控制设备驱动程序，以及流【重点、难点】1．重点：设备连接的属性、竞争和原子操作的特点和编程技巧，设备驱动程序，以及流2．难点：控制设备驱动程序【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】6学时第七章事件驱动编程【教学内容】1．视频游戏和操作系统2．屏幕编程：curses库3．时间编程：sleep函数原理和特点，间隔计时器、usleep精度更高的记时工具4．三种计时器：真实、进程和实用计时器的原理和作用5.信号的原理和操作方法；6.异步输入、视频游戏的初步设计方法。【教学要求】，本章将系统地讨论一个视频的相关技术和设计步骤，包括linux系统中使用到的信号、进程间通信等原理。要求学生：1．了解屏幕编程工具：curses库的原理和调用方法；2．了解时间编程技巧，掌握sleep函数、alarm函数、usleep函数的异同，以及几种计时器与系统中进程定义的联系；3．掌握Linux信号处理的概念及应用；4．掌握数据同步的概念、以及阻塞信号、临界区的实现和调用机制；5．掌握使用计时器和信号等工具实现视频游戏开发的基本概念与方法；【重点、难点】2181．重点：时间编程、信号处理、数据同步的概念、以及阻塞信号、临界区本科理论课程教学大纲（2014版）的实现；2．难点：计时器和信号等工具实现视频游戏开发的基本方法【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】6学时【教学内容】第八章Linux网络编程1．连接本地或远端的进程：服务器与Socket（套接字）2．用管道双向通信的机制与应用方法；3．协同进程（coroutines）4．文件/进程的相似性5.socket编程与网络服务；6.基于socket的C/S模式程序设计。【教学要求】，本章将系统地讨论了linux网络编程的基本原理和开发方法。重点描述了文件描述符的作用，同时说明了套接字就是系统进程和文件描述符通信的一种方法。要求学生：1．了解bc、fdopen、popen等函数的原理和调用方法；2．了解访问数据的方法：文件、应用程序接口和服务器之间的通讯方式；3．掌握Socket的概念及应用方式；4．掌握编写一个timeserv时间服务器的基本流程；【重点、难点】1．重点：掌握Socket的概念及应用方式；2．难点：掌握Socket的开发方法【教学方法】讲授法、讨论法、实验法、自主学习法等。【学时安排】6学时