该课程是计算机及相关专业的重要基础课程，课程开设的目的是向学生介绍计算机程序设计的基本知识，通过C语言基本内容及程序设计基本方法与编程技巧的学习与训练，培养学生的逻辑思维能力和程序设计能力，掌握程序设计的思想及方法，促进提高大学生的应用能力和实践能力，为后续相关专业课程的学习及培养计算机类学生软件开发能力奠定基础。二、教学基本要求C语言程序设计课程是一门实践性、应用性很强的课程，要求学生既要学习掌握基础知识和基本理论，又要注重基本技能训练，重视上机实践环节。通过该课程学习达到以下要求：熟悉C语言的基本概念、程序特点、语句语法；掌握算法的概念及设计方法；掌握C语言程序设计的方法及编程技巧，能正确使用C语言编写程序；熟练掌握调试程序的基本方法，并养成良好的编程习惯。课程重点是算法设计、逻辑控制、数组程序设计、函数程序设计、指针程序设计、结构体程序设计、文件程序设计。算法设计和实现是贯穿课程始终的核心教学内容，是体现应用能力培养的关键所在，一切教学内容都围绕算法设计和实现进行。编写使用用户函数是本课程的难点之一，面对各种变量、数组元素、数组名、指针等不同的形参类型，函数的定义和调用方法各不相同，初学者很容易将其混淆，教学过程中应注意难点问题的把握处理。本课程是计算机类专业后续课程数据结构、Java程序设计等专业课程的前导课程，也是进行逻辑训练和实践应用训练的重要基础课程。教学方法:本课程是学习面向过程的编程的入门课，讲解应以程序设计为主线25组织教学，强调算法设计和程序实现的能力培养；理论联系实际，讲练密切结合，理论实验同步教学，条件许可时实行理论实验一体化教学；加强案例教学，通过案例学习程序设计，力求举一反三；实行任务驱动，按照“问题分析—算法设计—程序实现—结果分析—总结完善”的教学路线实现每一个任务；重点程序前后各章密切衔接，逐步拓展，循序渐进；对所有重点教学内容全部设置实验，强化重点教学内容的教学。教材编选的原则：优先选用近三年出版的新教材、“面向21世纪课程教材”、“十五”、“十一五”、“十二五”国家规划教材、获奖教材和教学指导委员会推荐教材；所选教材要突出程序设计主线，利于程序设计能力培养。三、教学内容及学时分配第一章程序设计概述（6学时）教学要求：掌握程序设计的基本概念;熟悉算法设计和描述的基本方法，能对简单的问题设计算法，并用流程图表达出来；了解C语言程序结构的基本特点；了解数据类型、常量、变量的基本概念；掌握标识符的概念、特点与命名规则，了解保留字的概念；掌握在VC++6.0环境下编辑、运行简单的C语言程序的方法。教学重点：算法的概念、算法的设计及描述方法;数据类型、常量、变量的基本概念;在VC++6.0环境下编辑、运行简单的C语言程序的方法。教学难点：算法设计及描述;在VC++6.0环境下编辑、运行C语言程序。[实验名称]C语言程序的编辑运行[实验要求]熟悉VisualC++6.0的基本界面；学会在VisualC++6.0环境中建立、保存C语言源程序文件的方法；熟悉使用VisualC++6.0编辑运行C语言程序的基本方法；认识C语言程序的结构特点，学习程序的基本编写方法。[实验学时]2学时第二章简单程序设计（6学时）教学要求：掌握基本输出、输入函数printf()、scanf()的格式及其主要用法；掌握字符输出、输入函数putchar()、getchar()格式及其用法；掌握变量的定义和使用26方法；熟悉算术运算符和算术表达式；熟悉编译预处理命令define和include的基本功能和用法；熟悉数据类型的转换方法；掌握顺序结构程序设计的方法。教学重点：输入输出函数printf()、scanf()、putchar()、getchar()格式及其用法；变量的定义和使用；define和include的用法；顺序结构程序设计方法。教学难点：printf()、scanf()的格式；顺序结构程序设计方法。[实验名称]简单程序设计[实验要求]以VC++6.0为编程调试环境编写实现数值型数据、字符型数据的输入输出程序，通过本实验，掌握printf()、scanf()、putchar()、getchar()等基本输入、输出函数的格式及其主要用法；掌握简单变量的定义和使用方法；熟悉宏定义命令和文件包含命令的用法；学会顺序结构程序设计的基本方法。[实验学时]2学时第三章分支结构程序设计（8学时）教学要求：了解程序顺序、分支、循环等三种控制结构特点，能对任何一种结构绘制流程图；熟练掌握if语句三种形式（if、if-else、if-elseif）的特点及使用方法；掌握switch语句的结构、特点及用法；了解关系运算符及关系表达式的特点、作用，能熟练使用关系表达式；了解逻辑运算符及逻辑表达式的特点、作用，能熟练使用逻辑表达式；掌握分支结构程序设计的基本方法；了解嵌套的分支结构的特点，掌握嵌套的分支结构程序的设计方法；能熟练设计分支结构程序。教学重点：分支结构特点；if命令的特点及使用方法；switch结构、特点及用法；关系运算符及关系表达式；逻辑运算符及逻辑表达式；分支结构程序设计实现。教学难点：用逻辑表达式表达复合条件；嵌套分支结构程序设计。[实验名称]分支结构程序设计[实验要求]练习使用关系表达式、逻辑表达式表示条件的方法；以VC++6.0为编程调试环境，编写调试使用if命令（if、if-else、if-elseif三种形式）进行分支控制的程序；编写调试使用switch命令进行分支控制的程序；设计实现嵌套的分支结构的程序。通过本实验，掌握分支结构的程序设计方法。27[实验学时]2学时第四章循环结构程序设计（10学时）教学要求：熟练掌握三种循环控制语句（while、dowhile、for）的结构特点及使用方法；掌握循环程序设计方法，能利用三种循环控制语句设计循环程序；掌握break和continue命令的用法；掌握多重循环程序的结构特点；能熟练设计单循环结构和二重循环结构的程序。教学重点：三种循环控制（while、dowhile、for）结构特点及循环程序设计实现；多重循环程序的结构特点及实现。教学难点：for结构特点及循环程序设计实现；多重循环程序的结构特点及实现。[实验名称]循环结构程序设计[实验要求]以VC++6.0为编程调试环境，分别设计实现while结构程序、设计实现dowhile结构程序、设计实现for结构程序；设计实现多重循环结构程序。通过本实验，加深对循环控制结构有关概念的理解，掌握while、do-while和for三种循环控制特点及循环结构程序的设计和调试方法。重点掌握while结构和for结构循环程序。[实验学时]4学时第五章数组（12学时）教学要求：了解数组的特点；熟练掌握数值型一维数组的定义、初始化、元素引用及输入输出方法；掌握数值型二维数组的定义、初始化方法；掌握字符数组的定义、初始化方法；掌握字符串的输入输出方法；熟悉常用的字符串操作函数；了解一维数组和二维数组在计算机中的存储结构；掌握数值型、字符型一维数组的编程应用。教学重点：数值型一维数组的定义、初始化及程序设计；字符型一维数组的定义、初始化及其程序设计。教学难点：使用字符型数组处理字符串。[实验名称]一维数组程序设计28[实验要求]以VC++6.0为编程调试环境，设计实现数值型一维数组的输入输出程序；设计实现数值型一维数组的应用程序；设计实现字符串处理程序。通过本实验，加深对数组的理解，掌握使用数组处理批量数据的程序设计方法，掌握字符数据处理程序的设计方法。[实验学时]4学时第六章函数（12学时）教学要求：掌握用户函数的概念及特点；掌握用户函数的一般结构及函数的定义方法；掌握形参、实参、函数原型等重要概念；掌握函数声明、函数调用的一般方法；掌握函数嵌套的概念，能定义和使用嵌套函数；掌握函数递归的概念，能定义和使用递归函数；掌握数组元素作函数参数、一维数组名作函数参数时函数的定义和调用方法；了解局部变量、全局变量和变量的存储类型的概念，熟悉auto型和static型局部变量的特点和用法；掌握应用用户函数的程序设计方法；掌握利用函数进行结构化程序设计的一般方法。教学重点：用户函数的一般结构及定义方法；形参、实参、函数原型等概念；函数声明、函数调用方法；定义和使用嵌套函数；定义和使用递归函数；数组元素作函数参数、一维数组名作函数参数时函数的定义和调用方法。教学难点：一维数组名作参数的函数定义和调用。[实验名称]函数程序设计[实验要求]简单变量作参数的用户函数的设计应用；简单变量作参数的实现一维数组的处理；设计实现一维数组名作函数参数的应用程序。通过本实验，加深对用户函数的理解，加深结构化程序设计的理解，掌握简单变量作函数参数的程序设计方法，掌握使用用户函数处理一维数组的程序设计方法。[实验学时]4学时第七章指针（12学时）教学要求：掌握指针和指针变量的概念，了解数据的直接访问、间接访问的异同；掌握指针变量的定义、赋值方法；熟练使用指针访问简单变量；掌握指向一维数组的指针变量的定义方法，掌握用指针访问一维数组及字符串的方法；掌握指针数组29的定义及用法；掌握简单指针变量作函数参数的程序设计方法；掌握指向数组的指针作函数参数的程序设计方法；掌握字符串指针作函数参数的程序设计方法；熟悉指针数组作函数参数的程序设计方法；掌握指针函数的概念及指针函数的设计及使用方法；了解指针与二维数组的关系。教学重点：指针和指针变量的概念；使用指针访问简单变量；用指针访问一维数组及字符串；掌握简单指针变量作函数参数的程序设计；指针作函数参数；指针函数。教学难点：指针数组作函数参数；指针函数。[实验名称]指针程序设计[实验要求]用指针访问简单变量；用指针访问一维数组；用指针处理字符串；简单指针变量作函数参数的程序设计；指向数组的指针作函数参数的程序设计。通过本实验，加深指针的理解，掌握基本的指针程序设计方法。[实验学时]4学时第八章结构体（6学时）教学要求：掌握结构体的概念和特点；熟练定义结构体数据类型，掌握结构体变量的定义、引用及初始化方法；了解结构体数组的特点，能使用结构体数组解决简单问题；掌握结构体指针变量的定义与基本用法；熟悉结构体指针变量作函数参数的程序设计方法；了解链表的结构特点，掌握链表结构的定义方法，了解链表的基本操作。教学重点：定义结构体数据类型；结构体变量的定义及初始化方法；结构体数组的定义及使用；结构体指针变量的定义与基本用法；简单结构体程序的设计方法。教学难点：结构体指针变量作函数参数。[实验名称]结构体程序设计[实验要求]设计实现简单的结构体程序，实现结构体数据的输入输出及简单处理；设计实现简单的结构体数组程序，实现批量结构体数据的处理。通过本实验，加深结构体数据的理解，掌握简单结构体程序的设计方法。30[实验学时]2学时第九文件（6学时）教学要求：了解文件的概念及文件分类；了解文件操作的一般过程；了解文件类型指针的概念及使用FILE定义文件类型指针的方法；了解文件使用方式及表示，掌握文件的打开与关闭函数fopen()和fclose()的格式及用法；掌握文件的读写函数fputc()、fgetc()、fputs()、fgets()、fread()、fwrite()的功能、格式及用法；了解文件读写函数fprintf()和fscanf()等的功能、格式及用法；掌握文件结束函数feof()的功能及用法。熟悉文件的定位函数rewind()、fseek()、ftell()的功能、格式及用法；掌握使用文件进行数据读写的程序设计方法。教学重点：文件打开与关闭；基本的文件读写函数fputc()、fgetc()、fputs()、fgets()、fread()、fwrite()用法；使用文件进行数据读写的程序设计。教学难点：使用文件进行数据读写的程序设计。[实验名称]文件程序设计[实验要求]编写调试存储及显示文本文件内容的程序。通过本实验，掌握文件、文件指针的概念，掌握文件读写的基本方法，加深对文件的理解，熟悉基本的文件程序设计方法[实验学时]2学时