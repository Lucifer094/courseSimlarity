《数据结构》是计算机科学与技术，软件工程，计算机科学与技术（软件外包），网络工程专业的学科基础与专业必修课程。它不仅是应用程序设计的基础，而且是设计和实现编译程序、操作系统、数据库系统及其它系统程序的重要基础。该课程在教学中起着承上启下的重要作用，是计算机相关专业学生应用能力和专业素质培养的重要环节。本课程的主要任务是使学生深入理解数据的各种逻辑结构及其在计算机中的存储表示，培养提高对给定实际问题选择和构造合适数据结构及设计有效算法的能力，为以后进行软件开发和学习后续课程打下一个坚实的基础。二、教学基本要求通过本课程的学习，应使学生达到以下要求：掌握数据结构的基本概念，了解数据结构及其分类、数据结构与算法的密切关系；熟悉各种基本数据结构及其操作；掌握设计算法的步骤和算法分析方法；掌握数据结构在排序和查找等常用算法中的应用。通过课程学习，使学生学会分析研究数据结构的特性，为应用问题涉及的数据选择适当的逻辑结构、存储结构及其相应的算法；初步掌握算法的时间分析和空间分析技术。本课程的学习也是复杂程序设计的训练过程，要求学生编写的程序结构清楚和正确易懂，符合软件工程的规范。教学思路：本课程是理论性和实践性都很强的课程，要引导学生既重视基础理论、基本概念，又重视工程应用背景。注重启发式、研讨式、任务驱动式教学，使63学生能理论联系实际，激发其学习积极性。充分利用多媒体、视频动画演示、课程网站等相结合的立体化教学手段，拓展学生学习渠道，支持学生的自主学习和协作式探索，从而达到对学生逻辑思维能力、理论与实践应用综合能力的培养。三、教学内容及学时分配第一章绪论（4学时）教学要求：熟悉数据、数据元素、数据项、数据对象、数据结构、逻辑结构、存储结构和数据类型等概念术语的含义，掌握基本概念，特别是数据的逻辑结构和存储结构之间的关系。分清哪些是逻辑结构的性质，哪些是存储结构的性质；了解抽象数据类型的定义及表示方法；熟悉类C语言的书写规范；理解算法五个要素的确切含义；掌握计算语句频度和估算算法时间复杂度的方法。教学重点：各概念术语的确切含义；算法的概念、评价标准及从时间和空间角度分析算法的方法。教学难点：数据结构的基本概念；数据的逻辑结构、存储结构及其差异；算法的时间复杂度分析。第二章线性表（10学时）教学要求：了解线性表的逻辑结构特性是数据元素之间存在着线性关系，在计算机中表示这种关系的两类不同的存储结构是顺序存储结构和链式存储结构；熟练掌握这两种存储结构的描述方法，如链表中的头结点、头指针和首元素结点的区别及循环链表、双向链表的特点等，链表是本章的重点和难点。扎实的指针操作和内存动态分配的编程技术是学好本章的基本要求；熟练掌握线性表在顺序存储结构上实现基本操作：查找、插入和删除的算法；熟练掌握在各种链表结构中实现线性表操作的基本方法，能在实际应用中选用适当的链表结构。了解静态链表，能够加深对链表本质的理解。能够从时间和空间复杂度的角度综合比较线性表两种存储结构的不同特点及其使用场合。教学重点：顺序表的存储结构的描述方法；线性表在顺序存储结构上实现基本操作；链式存储结构的描述方法；线性表在链式存储结构上实现基本操作。教学难点：各种链表的特点及在其上实现线性表基本操作的方法。64[实验名称]链表[实验要求]编写算法建立一个单链表，用函数实现单链表的插入、查找、删除，输出每次运算前后的链表并进行比较与分析。[实验学时]2学时第三章栈和队列（8学时）教学要求：掌握栈和队列的操作特性，并能在相应的应用问题中正确选用它们；熟练掌握栈类型的两种实现方法，即两种存储结构表示时的基本操作实现算法，特别应注意栈满和栈空的条件以及它们的描述方法；熟练掌握循环队列和链队列的基本操作实现算法，特别注意队满和队空的条件以及它们的描述方法。教学重点：掌握这两种结构的特点，以便能在应用问题中正确使用。栈和队列在两种存储结构中的实现都不难，但应该对它们了如指掌，特别要注意它们的基本操作实现时的一些特殊情况，如栈满和栈空、队满和队空的条件以及它们的描述方法。教学难点：队满和队空的条件以及它们的描述方法；循环队列的基本操作实现算法。[实验名称]栈及其运算[实验要求]用栈实现逆波兰表达式的求值。进栈、出栈和判栈空运算以函数的方式实现。[实验学时]2学时第四章串（2学时）教学要求：熟悉串的七种基本操作的定义，并能利用这些基本操作实现串的其它各种操作的方法；熟练掌握在串的定长顺序存储结构上实现串的各种操作的方法；掌握串的存储结构以及在其上实现串操作的基本方法；了解串匹配的KMP算法，熟悉next函数的定义，学会手工计算给定模式串的next函数值和改进的next函数值。教学重点：串的基本操作和存储方法。教学难点：在串的存储结构上实现基本操作；KMP算法。65第五章数组和广义表（4学时）教学要求：掌握数组的两种存储表示方法，并掌握数组在以行为主的存储结构中的地址计算方法；理解掌握对特殊矩阵进行压缩存储的下标变换公式；了解稀疏矩阵的两种存储方法的特点和适用范围，领会以三元组表示稀疏矩阵时进行矩阵运算采用的处理方法；掌握广义表的结构特点及其存储表示方法，学会对非空广义表进行分解的两种分析方法：即可将一个非空广义表分解为表头和表尾两部分或者分解为n个子表。教学重点：数组的顺序存储；矩阵的压缩存储。教学难点：稀疏矩阵的两种压缩存储方法。第六章树和二叉树（12学时）教学要求：熟练掌握二叉树的结构特性，了解相应的证明方法；熟悉二叉树的各种存储结构的特点及适用范围；熟练掌握二叉树各种遍历策略的递归和非递归算法；理解二叉树线索化的实质，熟练掌握二叉树的线索化过程以及在中序线索化树上找给定结点的前驱和后继的方法；熟悉树的各种存储结构及其特点，掌握树和森林与二叉树的转换方法；学会编写实现树的各种操作的算法；了解最优树的特点，掌握建立哈夫曼树和构造哈夫曼编码的方法。教学重点：二叉树的定义、性质和存储结构；二叉树的遍历；哈夫曼树的基本概念及哈夫曼算法。教学难点：理解二叉树的性质及其证明；各种二叉树遍历策略的递归算法及应用；哈夫曼算法的实现。[实验名称]二叉树的建立及输出[实验要求]输入某种形式的二叉树数据，建立一颗二叉链表表示的二叉树，对其进行前序，中序，后序输出。[实验学时]2学时第七章图（14学时）66教学要求：熟悉图的各种存储结构及其构造算法；熟练掌握图的两种搜索路径的遍历：遍历的逻辑定义、深度优先搜索和广度优先搜索的算法；应用图的遍历算法求解各种简单路径问题；掌握图的最小生成树算法及最短路径的求法。掌握拓扑排序及关键路径的的推导方法。教学重点：图的邻接矩阵表示法和邻接表表示法；图的深度优先和广度优先遍历算法；最小生成树的概念及构造方法；拓扑排序；最短路径的求解思路。教学难点：图的邻接表表示法；深度优先和广度优先遍历算法；最小生成树的构造方法；求解最短路径的思路及算法。[实验名称]图及其遍历[实验要求]将图以邻接矩阵的存储形式存入计算机，然后输出其深度优先及广度优先序列；将图的邻接矩阵转化生成邻接表，基于邻接表对图进行深度优先及广度优先遍历并输出结果。[实验学时]4学时第八章查找（14学时）教学要求：熟练掌握顺序表和有序表的查找方法；熟练掌握二叉排序树的构造和查找方法；掌握二叉平衡树的维护平衡方法；掌握B-树、B+树和键树的特点以及它们的建树过程；掌握哈希表的构造方法，深刻理解哈希表与其他表的实质性差别；上述查找过程的判定树的构造方法，以及等概率查找成功时的平均查找长度。教学重点：顺序查找、折半查找、索引顺序查找各自的思路与特点；二叉排序树的插入、删除算法和查找方法；哈希表处理冲突的方法，哈希表的查找及其分析。教学难点：各种查找算法的思路和算法实现；二叉平衡树的维护平衡方法；B-树的概念及操作过程；哈希表处理冲突的方法及其分析。[实验名称]树表的查找[实验要求]对于给定的整数序列建立二叉排序树，对其进行插入，删除，查找并输出操作后的结果。67[实验学时]4学时第九章排序（16学时）教学要求：深刻理解排序的定义，理解插入排序、交换排序、选择排序、归并排序、基数排序各种方法的特点；了解各种方法的排序过程及其依据的原则；掌握各种排序算法及时间复杂度的分析方法；理解排序方法的“稳定”或“不稳定”的含义。掌握各种内部排序方法的应用。教学重点：各种排序的基本思想、算法特点、稳定性及算法时间复杂度的分析。教学难点：希尔排序，快速排序，堆排序及基数排序的基本思想和算法实现；各种排序算法时间复杂度的分析方法。[实验名称]排序[实验要求]对于给定的N个关键字进行选择排序与快速排序并输出结果。[实验学时]2学时