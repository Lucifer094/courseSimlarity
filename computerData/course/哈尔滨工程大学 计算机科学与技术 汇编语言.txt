（1）使学生掌握汇编语言的概念与特点，以及汇编语言程序阅读、分析、编写、调试的能力；（2） 使学生能够应用所学计算机工作的基础知识，提高高级语言程序设计和开发的质量和能力，并使学生具备一定的系统软件开发能力；（3）培养学生严密的逻辑思维能力、算法设计与分析能力、程序设计与实现能力，团队协作、交流、表达能力，创新思维和创新能力。三、教学基本要求（1） 具有阅读、分析、编写、调试汇编代码的能力；（2） 具备从汇编角度理解程序设计语言和计算机运行机理的意识；（3） 具有严密的逻辑思维能力,撰写算法详细设计文档。四、教学内容与学时分配1.汇编语言程序设计基础（2学时）1.1 Intel 80X86 CPU、寄存器组以及内存介绍1.2 计算机系统的实模式和保护模式介绍2.X86汇编指令集介绍（2学时）11052.1 基本运算指令2.2 分支跳转指令2.3 寻址方式介绍3. 汇编语言实现中断程序设计 （2学时）3.1 中断与异常的概念3.2 中断程序设计4.外设与 CPU的交互 （2学时）4.1 汇编语言实现 IO接口和控制5. 汇编语言应用：调试（Windows）案例分析（8学时）5.1 理论篇之调试技术概览5.2 工具篇之 WinDbg用法5.3 实例篇5.3.1 在调试器中观察计算机的睡眠过程5.3.2 在调试器中观察计算机的唤醒过程6. C++反汇编与逆向分析技术简介（8学时）6.1 理论篇之逆向及保护机制分析6.2 工具篇之黑客工具介绍6.3 实例篇6.3.1 WinRar 3.42破解及注册6.3.2 “熊猫烧香”病毒逆向分析五、教学方法及手段（含现代化教学手段及研究性教学方法）采用多种方法和手段相结合的方式，以促进学生思考、激发创造性。主要包括：（1）问题讨论，激发学生的兴趣兴趣是最好的老师，而体现兴趣的一个重要方面就是心中存有“为什么、是什么、怎么样、行不行、可以吗”等问题。问题的提出可以层出不穷，通过一个个问题的提出、解答和探究，将有关知识点组织成网络，潜移默化的熏陶学生寻根问底的探究精神。（2）实例演示，化抽象为具体2106实例演示的优点是学生通过具体的实例，看得到程序或者指令的执行过程，看得到寄存器、内存等等的变化，看得见高级语言程序编译后的结果，使得抽象的计算机工作原理能有一个具体的体现；同时，通过实例演示，教会学生实践的方法。（3）多媒体动态呈现，变枯燥乏味为生动有趣为了更好的帮助学生理解有关概念，同时增加趣味性，采用多媒体技术，以动态的方式呈现有关知识点。例如，指令的执行过程等以动画生动表现出来。（4）强化课外，突出学生的动手能力的锻炼通过动手实践，发现应用中存在的问题，解决遇到的问题。课后的实践分成了多个层次，一是巩固所学知识的实践，解决是什么的问题；二是利用原理分析实际问题，解决为什么的问题。三是采用所学应用原理和方法来指导程序设计，解决怎么做的问题。六、实验（或）上机内容实验一：阅读反汇编代码及NASM汇编器简介、使用（4学时）实验二：编写简单的汇编程序（4学时）实验三：采用汇编语言实现对 IO的控制（4学时）七、前续课程、后续课程前续课程：计算机组成原理，操作系统后续课程：编译原理，计算机系统结构