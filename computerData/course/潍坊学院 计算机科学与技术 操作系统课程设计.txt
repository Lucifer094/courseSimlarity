本课程设计的目的是：巩固理论知识,加深学生对操作系统基本知识的理解，掌握使用操作系统基本原理进行程序设计的方法，提高运行操作系统基本原理解决实际问题的能力，为将来更好地从事计算机及相关专业的学习工作打下良好的基础。课程设计的任务是:根据所学操作系统原理知识和理论,查阅相关资料及参考文献，设计一能够完成独立功能的程序。程序的功能可以是：一个简单操作系统的设计与实现;Linux系统某管理功能的延伸或改进；操作系统部分原理的算法模拟；操作系统部分原理及算法的应用；利用Linux系统调用完成一些相关的应用程序。在设计中，指导教师给出需解决的问题（也可由学生任选相关项目）,提示总体思路，具体设计及程序的实现由学生独立完成。完成课程设计说明书。二、教学基本要求1、设计题目能综合运用操作系统的基本知识或某些操作系统的系统调用；2、对系统的分析正确，思路清晰，设计方案要合理；3、要结合题目的特点，设计编写程序代码；4、要注意设计、编码及测试过程的经验积累和技巧，提高的动手能力和解决实际问题的能力；５、独立完成自己的设计任务并编写设计说明书，说明书要规范、认真、清晰完整。三、教学内容及学时分配第一章需求分析教学要求：分析课题要求，查阅、整理相应的文献资料；根据文献资料和课题的实际要求，确定开发系统的必要性和系统的主要功能。190指导教师应向学生介绍所开发系统的实际背景情况，学生查阅有关文献资料，完成资料、文档的收集和建立。教学重点：确定开发系统的的主要功能。教学难点：主要功能设计的逻辑性及合理性。第二章详细功能设计教学要求：将系统的功能分解成各个不同的部分，为各部分功能设计相应的算法，实现软件的设计过程。指导教师应检查学生建立的逻辑模型是否合理、完善。教学重点：详细功能设计教学难点：数据结构设计第三章编程教学要求：根据设计的功能要求，写出各功能部分相关的程序代码。教学重点：程序代码部分，工作量较大。教学难点：程序的算法设计。第四章程序的调试教学要求：对编辑完成的程序进行编译、连接；有问题及时调整及修改，直到程序运行通过为止。这个过程需要反复若干次。指导教师应解释学生提出的问题，帮助学生检查设计的合理性与正确性，引导学生正确使用工具。教学重点：调试的过程。教学难点：调试中出现各种错误及时修改。第五章程序的测试教学要求：对于不同的项目及需求，分别给出不同数量的测试要求。另外，对于程序中出现的各种数据逻辑，都应当包含在测试用例中。当测试结果遇到问题，应对原程序进行及时修改，直到测试顺利为止。教学重点：测试过程及修改程序。教学难点：对原程序进行修改。第六章课程设计报告书教学要求：整理、完善相关设计文档资料及源程序代码；按要求写出课程设计报告书。（1）需求分析，即开发系统的必要性及系统的主要功能简介。（2）系统概要设计①系统的主要功能，即该系统总的要完成的设计目标、任务；②系统模块功能结构，即系统的结构，用组织结构图表示；③运行环境要求，即该系统运行的软件、硬件环境要求；④数据结构设计。191（3）系统的详细设计，即系统功能实现的设计思想。①确定程序设计的各个模块的算法及内部的数据组织，包括主要代码；②描述各种算法；（4）系统测试及调试①实际测试数据（即测试用例）②预期的结果③实际运行结果及分析；④系统测试结论；（5）用户手册用户操作的使用说明、方法描述。（6）心得体会，概述总结自己的设计收获（7）主要参考文献（8）附：系统的主要源代码教学重点：文档清晰条理。教学难点：系统的详细设计。第七章成绩考核方法教学要求：指导教师根据学生的课程设计的出勤、表现、方案的合理性、程序的正确性、功能的完善性、工作量的大小、报告书的规范性，对学生的课程设计进行考核。成绩考核分为优秀、良好、中等、及格与不及格五等。教学重点：对学生的出勤、程序的运行情况及说明书完成情况进行考核；教学难点：对学生程序的运行情况进行考核；各章的学时数根据课程设计的题目情况及学生对知识的掌握情况,根据教师的要求酌情掌握。